{"version":3,"sources":["actions/types.js","security/setJWTTokenToHeader.js","actions/SecurityActions.js","component/SideNavbar.js","component/schedule/ScheduleTopMenuBar.js","actions/BusRouteActions.js","actions/ScheduleActions.js","component/schedule/ScheduleDateTime.js","component/schedule/ShowRoute.js","component/schedule/Schedule.js","actions/BusActions.js","actions/DriverActions.js","actions/StuffActions.js","component/schedule/AddSchedule.js","component/schedule/UpdateSchedule.js","component/bus/BusTopMenuBar.js","component/bus/BusReportItem.js","component/bus/BusReports.js","component/bus/Bus.js","component/bus/AddBus.js","component/bus/UpdateBus.js","component/bus/BusRequisitionTopBar.js","component/bus/BusRequisition.js","component/bus/CreateBusRequisition.js","actions/UserActions.js","component/route/BusRouteTopMenuBar.js","component/route/BusRoute.js","actions/StoppageActions.js","component/route/AddBusRoute.js","component/route/UpdateBusRoute.js","component/stoppage/StoppageTopMenubar.js","component/stoppage/Stoppage.js","component/stoppage/AddStoppage.js","component/stoppage/UpdateStoppage.js","component/driverAndStuff/TopBar.js","component/driverAndStuff/Driver.js","component/driverAndStuff/Stuff.js","component/driverAndStuff/AddDriverOrStuff.js","component/notice/Announcement.js","component/notice/Notice.js","actions/AnnouncementActions.js","component/notice/AddAnnouncement.js","component/feedback/ReplyFeedback.js","component/feedback/FeedbackItem.js","component/feedback/Feedback.js","actions/FeedbackActions.js","component/Login.js","reducers/ErrorReducer.js","reducers/StoppageReducer.js","reducers/BusReducer.js","reducers/ScheduleReducer.js","reducers/BusRouteReducer.js","reducers/DriverReducer.js","reducers/StuffReducer.js","reducers/AnnouncementReducer.js","reducers/FeedbackReducer.js","reducers/UserReducer.js","reducers/SecurityReducer.js","reducers/index.js","Store.js","security/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","setJWTTokenToHeader","token","Axios","defaults","headers","common","logout","dispatch","a","localStorage","removeItem","type","payload","SideNavbar","props","processLogout","event","window","confirm","location","href","state","pathnameComponents","pathname","split","bind","Nav","defaultActiveKey","this","variant","className","style","padding","border","borderRadius","fontSize","fontWeight","Container","src","height","alt","Link","icon","faCalendarCheck","faBus","faMapMarkerAlt","faRoute","faUsersCog","faUsers","faBullhorn","faHandPaper","Button","size","onClick","faPowerOff","Component","connect","ScheduleTopMenuBar","goToPageNo","pageNo","replace","buttons","data","push","key","i","Math","min","pageCount","disabled","Row","Col","md","paddingLeft","to","paddingRight","ButtonGroup","float","addBusRoute","busRoute","history","post","respose","getBusRoutes","get","res","sort","b","routeId","createSchedule","schedule","response","ScheduleDateTime","Date","date","toDateString","toLocaleTimeString","ShowRoute","showRoute","stoppageList","routeString","sz","length","stoppageName","route","routeDetail","completedScheduleStyle","backgroundColor","Schedule","componentDidMount","getAllSchedules","deleteScheduleHandler","scheduleId","deleteSchedule","pathNameComponents","tmpPageNo","parseInt","upperBound","lowerBound","schedules","overflow","Table","bordered","striped","hover","textAlign","colSpan","map","idx","isComplete","routes","find","bus","busId","number","driver","driverId","user","firstName","lastName","stuff","stuffId","faPen","faTrash","delete","addBus","reqType","getAllAvailableBuses","tmpBuses","filter","isAvailable","getAllDriversInservice","getAllStuffsInservice","AddSchedule","componentWillReceiveProps","nextProps","errors","setState","getDateForInput","tmpDate","String","getFullYear","getMonth","getDate","parseTimeString","timeFormat","time","setHours","setMinutes","stoppage","concat","onChangeHandler","target","name","value","onChangeSelectorHandler","listName","fieldName","element","tmp","onSubmitHandler","preventDefault","newSchedule","paddingTop","Form","onSubmit","Group","Label","Control","classnames","onChange","as","availableBuses","drivers","stuffs","UpdateSchedule","match","params","getSchedule","getHours","getMinutes","getSeconds","editedSchedule","BusTopMenuBar","Fragment","returnLink","BusReportItem","paddingBottom","Card","Header","Text","busReport","fullName","email","Body","report","para","Footer","markBusReportAsSolved","busReportId","deleteBusReportHandler","BusReports","Modal","centered","show","onHide","onHideHandler","closeButton","Title","Jumbotron","busReports","busNotAvailableStyle","Bus","getAllBuses","deleteBusHandler","deleteBus","deleteBusReportFromBus","buses","oilTankCapacity","gasCylinderCapacity","protoType","PropTypes","object","isRequired","func","solved","tmpbus","AddBus","newBus","UpdateBus","getBus","editedBus","BusRequisitionTopBar","busRequsitionExpired","BusRequisition","getAllBusRequisitions","deleteBusRequisition","requisitionId","pathWords","busRequsitions","busRequsition","isExpired","startDateTime","endDateTime","mobileNo","busRequisitions","busRequisitionId","CreateBusRequisition","getAllUsers","getBusRequisition","parseDateToString","dateStr","tmpStartDateTime","tmpEndDateTime","newBusRequisition","createBusRequisitions","pathNameWords","users","userId","busRequisition","BusRouteTopMenuBar","BusRoute","deleteRouteHandler","deleteBusRoute","addStoppage","getAllStoppages","AddBusRoute","seletedStoppage","addStoppageInRoute","stoppages","tmpStoppageSequence","stoppageSequence","forEach","stoppageId","deleteStoppageFromRoute","submitFormHandler","tmpRoute","newBusRoute","faTrashAlt","custom","UpdateBusRoute","getBusRoute","StoppageTopMenubar","Stoppage","deletestoppageById","deleteStoppage","latitude","longitude","AddStoppage","newStoppage","UpdateStoppage","getStoppageById","updateStoppage","TopBar","Driver","deleteDriver","rating","Stuff","deleteStuff","AddDriverOrStuff","newUser","password","isBlocked","addNewDriverOrStuff","placeholder","Announcement","toLocaleDateString","announcement","paragraph","announcementId","Notice","getAll","deleteAnnouncement","announcements","propType","AddAnnouncement","nexprops","newAnnouncement","create","ReplyFeedback","sendFeedbackReply","notification","required","FeedbackItem","openFeedbackReplyForm","Subtitle","marginBottom","description","deleteFeedback","feedbackId","faReply","Feedback","getAllFeedbacks","replyMessage","newNotification","toISOString","replyFeedback","feedback","feedbacks","Login","security","isValidToken","loginRequest","username","login","column","sm","jwt","setItem","decode","jwt_decode","initialState","initialSate","initailState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","component","otherProps","render","jwtToken","decodeJwtToken","currentTime","now","exp","MainDivStyle","App","role","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.febebfaf.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\n\n// Stoppage Services\nexport const GET_STOPPAGES = \"GET_STOPPAGES\";\nexport const GET_STOPPAGE = \"GET_STOPPAGE\";\nexport const DELETE_STOPPAGE = \"DELETE_STOPPAGE\";\n\n// Bus Services\nexport const GET_BUSES = \"GET_BUSES\";\nexport const GET_BUS = \"GET_BUS\";\nexport const DELETE_BUS = \"DELETE_BUS\";\nexport const GET_AVAILABLE_BUSES = \"GET_AVAILABLE_BUSES\"\nexport const MARK_BUSREPORT_AS_SOLVED = \"MARK_BUSREPORT_AS_SOLVED\"\nexport const DELETE_BUSREPORT = \"DELETE_BUSREPORT\"\nexport const GET_BUS_REQUISITIONS = \"GET_BUS_REQUISITIONS\"\nexport const GET_BUS_REQUISITION = \"GET_BUS_REQUISITION\"\nexport const DELETE_BUS_REQUISITION = \"DELETE_BUS_REQUISITION\"\n\n// Schedule Services\nexport const GET_SCHEDULE = \"GET_SCHEDULE\";\nexport const GET_SCHEDULES = \"GET_SCHEDULES\";\nexport const DELETE_SCHEDULE = \"DELETE_SCHEDULE\";\n\n// Bus Route Services\nexport const GET_BUSROUTE = \"GET_BUSROUTE\";\nexport const GET_BUSROUTES = \"GET_BUSROUTES\";\nexport const DELETE_BUSROUTE = \"DELETE_BUSROUTE\";\n\n// Driver Services\nexport const GET_DRIVER = \"GET_DRIVER\";\nexport const GET_DRIVERS_INSERVICE = \"GET_DRIVERS_INSERVICE\";\nexport const DELETE_DRIVER = \"DELETE_DRIVER\";\n\n// Stuff Services\nexport const GET_STUFF = \"GET_STUFF\";\nexport const GET_STUFFS_INSERVICE = \"GET_STUFFS_INSERVICE\";\nexport const DELETE_STUFF = \"DELETE_STUFF\";\n\n// Announcement Services\nexport const GET_ANNOUNCEMENTS = \"GET_ANNOUNCEMENTS\";\nexport const DELETE_ANNOUNCEMENT = \"DELETE_ANNOUNCEMENT\";\n\n// Feedback Services\nexport const GET_FEEDBACKS = \"GET_FEEDBACKS\";\nexport const DELETE_FEEDBACK = \"DELETE_FEEDBACK\";\n\n// User Services\nexport const GET_USERS = \"GET_USERS\";\n\n// Security Services\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import Axios from \"axios\"\n\nconst setJWTTokenToHeader = token => {\n  if (token) {\n    Axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n  } else {\n    delete Axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTTokenToHeader;","import Axios from 'axios';\nimport { SET_CURRENT_USER, GET_ERRORS } from './types';\nimport setJWTTokenToHeader from '../security/setJWTTokenToHeader';\nimport jwt_decode from 'jwt-decode';\n\nexport const login = loginRequest => async dispatch => {\n  try {\n    // post the loginRequest(email and password)\n    const res = await Axios.post('/api/admin/login', loginRequest);\n    // extract the JWT token\n    const token = res.data.jwt;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set the token in the header\n    setJWTTokenToHeader(token);\n    // decode the token\n    const decode = jwt_decode(token);\n    // dispatch to SecurityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decode\n    });\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTTokenToHeader(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};","import React, { Component } from \"react\";\nimport { Nav, Button, Container } from \"react-bootstrap\";\nimport { logout } from \"../actions/SecurityActions\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPowerOff,\n  faCalendarCheck,\n  faBus,\n  faBullhorn,\n  faHandPaper,\n  faUsers,\n  faUsersCog,\n  faRoute,\n  faMapMarkerAlt\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass SideNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pathnameComponents: window.location.pathname.split(\"/\")\n    };\n    this.processLogout = this.processLogout.bind(this);\n  }\n\n  processLogout = event => {\n    if (\n      window.confirm(\"Do you want to logout?\")\n    ) {\n      this.props.logout();\n      window.location.href = \"/\";\n    }\n  };\n\n  render() {\n    return (\n      <Nav\n        defaultActiveKey={\n          this.state.pathnameComponents[1] === \"\"\n            ? \"/schedule\"\n            : \"/\" + this.state.pathnameComponents[1]\n        }\n        variant=\"pills\"\n        className=\"flex-column\"\n        style={{\n          padding: \"10px\",\n          border: \"1px solid gray\",\n          borderRadius: \"5px\",\n          fontSize: \"14px\",\n          fontWeight: \"500\"\n        }}\n      >\n        <Container style={{ padding: \"5px\" }}>\n          <img src='/DIUBNR.png' height=\"75px\" alt=\"sidebar logo\" />\n        </Container>\n        <br />\n        <Nav.Link href=\"/schedule\">\n          <FontAwesomeIcon icon={faCalendarCheck} />\n          {\" Schedule\"}\n        </Nav.Link>\n        <Nav.Link href=\"/bus\">\n          <FontAwesomeIcon icon={faBus} />\n          {\" Bus\"}\n        </Nav.Link>\n        <Nav.Link href=\"/stoppage\">\n          <FontAwesomeIcon icon={faMapMarkerAlt} />\n          {\" Stoppage\"}\n        </Nav.Link>\n        <Nav.Link href=\"/route\">\n          <FontAwesomeIcon icon={faRoute} />\n          {\" Route\"}\n        </Nav.Link>\n        <Nav.Link href=\"/driver\">\n          <FontAwesomeIcon icon={faUsersCog} />\n          {\" Driver\"}\n        </Nav.Link>\n        <Nav.Link href=\"/stuff\">\n          <FontAwesomeIcon icon={faUsers} />\n          {\" Stuff\"}\n        </Nav.Link>\n        <Nav.Link href=\"/notice\">\n          <FontAwesomeIcon icon={faBullhorn} />\n          {\" Notice\"}\n        </Nav.Link>\n        <Nav.Link href=\"/feedback\">\n          <FontAwesomeIcon icon={faHandPaper} />\n          {\" Feedback\"}\n        </Nav.Link>\n        <br />\n        <Button\n          size=\"sm\"\n          variant=\"outline-danger\"\n          onClick={this.processLogout}\n        >\n          <span>\n            <FontAwesomeIcon icon={faPowerOff} />\n          </span>\n          {\"  Logout\"}\n        </Button>\n      </Nav>\n    );\n  }\n}\n\nexport default connect(null, { logout })(SideNavbar);\n","import React, { Component } from 'react';\nimport { Row, Col, Button, ButtonGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nclass ScheduleTopMenuBar extends Component {\n  goToPageNo = (event, pageNo) => {\n    window.location.replace(`/schedule/page/${pageNo}`);\n  };\n\n  render() {\n    const maxButtons = 5;\n    const buttons = [];\n    if (this.props.data.pageNo - 1 > 0) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageNo - 1}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageNo - 1)}\n        >\n          {this.props.data.pageNo - 1}\n        </Button>\n      );\n    }\n    buttons.push(\n      <Button\n        key={this.props.data.pageNo}\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={event => this.goToPageNo(event, this.props.data.pageNo)}\n      >\n        {this.props.data.pageNo}\n      </Button>\n    );\n    for (\n      let i = this.props.data.pageNo + 1;\n      i <= Math.min(\n        this.props.data.pageCount - 1,\n        this.props.data.pageNo + maxButtons\n      ); i++\n    ) {\n      buttons.push(\n        <Button\n          key={i}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, i)}\n        >\n          {i}\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > maxButtons) {\n      buttons.push(\n        <Button\n          key={0}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          disabled\n        >\n          <strong>......</strong>\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageCount}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageCount)}\n        >\n          {this.props.data.pageCount}\n        </Button>\n      );\n    }\n\n    return (\n      <Row>\n        <Col md={3} style={{ padding: \"5px\", paddingLeft: \"15px\" }}>\n          <Link to={\"/schedule/add\"}>\n            <Button size=\"sm\" variant=\"outline-primary\">\n              Add Schedule\n            </Button>\n          </Link>\n        </Col>\n        <Col md={9} style={{ padding: \"5px\", paddingRight: \"15px\" }}>\n          <ButtonGroup size=\"sm\" style={{ float: \"right\" }}>\n            {buttons}\n          </ButtonGroup>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default ScheduleTopMenuBar;","import Axios from \"axios\";\nimport { GET_ERRORS, GET_BUSROUTES, DELETE_BUSROUTE, GET_BUSROUTE } from \"./types\";\n\nexport const addBusRoute = (busRoute, history) => async dispatch => {\n  try {\n    await Axios.post(`/api/route/add`, busRoute);\n    history.push(\"/route\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.respose.data\n    });\n  }\n};\n\nexport const getBusRoutes = () => async dispatch => {\n  const res = await Axios.get(`/api/route/GLOBAL/all`);\n  res.data.sort(function (a, b) { return a.routeId - b.routeId; })\n  dispatch({\n    type: GET_BUSROUTES,\n    payload: res.data\n  });\n};\n\nexport const getBusRoute = (routeId, history) => async dispatch => {\n  try {\n    const res = await Axios.get(`/api/route/GLOBAL/${routeId}`);\n    dispatch({\n      type: GET_BUSROUTE,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/route\");\n  }\n};\n\nexport const deleteBusRoute = (routeId, history) => async dispatch => {\n  if (\n    window.confirm(\"Are you sure?\")\n  ) {\n    try {\n      await Axios.delete(`/api/route/${routeId}`);\n      dispatch({\n        type: DELETE_BUSROUTE,\n        payload: routeId\n      });\n    } catch (err) {\n      history.push(\"/route\");\n    }\n  }\n};","import Axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_SCHEDULES,\n  GET_SCHEDULE,\n  DELETE_SCHEDULE\n} from \"./types\"\n\nexport const createSchedule = (schedule, history) => async dispatch => {\n  try {\n    await Axios.post(`/api/schedule/add`, schedule);\n    history.push(\"/schedule\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getAllSchedules = () => async dispatch => {\n  const res = await Axios.get(`/api/schedule/GLOBAL/all`);\n  let schedules = res.data;\n  schedules.sort(function (a, b) { return new Date(b.date) - new Date(a.date) });\n  dispatch({\n    type: GET_SCHEDULES,\n    payload: schedules\n  });\n};\n\nexport const getSchedule = (scheduleId, history) => async dispatch => {\n  try {\n    const res = await Axios.get(`/api/schedule/GLOBAL/${scheduleId}`);\n    dispatch({\n      type: GET_SCHEDULE,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/schedule\");\n  }\n};\n\nexport const deleteSchedule = (scheduleId, history) => async dispatch => {\n  if (\n    window.confirm(\"Are you sure?\")\n  ) {\n    try {\n      await Axios.delete(`/api/schedule/${scheduleId}`);\n      dispatch({\n        type: DELETE_SCHEDULE,\n        payload: scheduleId\n      });\n    } catch (err) {\n      history.push(\"/schedule\");\n    }\n  }\n};","import React, { Component } from 'react'\nimport { Col } from 'react-bootstrap';\n\nclass ScheduleDateTime extends Component {\n  render() {\n    return (\n      <Col style={{ padding: \"0px\", fontSize: \"11px\" }}>\n        <div>{new Date(this.props.date).toDateString()}</div>\n        <div>{new Date(this.props.date).toLocaleTimeString()}</div>\n      </Col>\n    )\n  }\n}\n\nexport default ScheduleDateTime;","import React, { Component } from 'react'\nimport { Col } from 'react-bootstrap'\n\nexport default class ShowRoute extends Component {\n  constructor() {\n    super();\n    this.showRoute = this.showRoute.bind(this);\n  }\n\n  showRoute = stoppageList => {\n    let routeString = \"\", sz = stoppageList.length;\n    routeString = \"(\";\n    for (let i = 0; i < sz; i++) {\n      routeString += stoppageList[i].stoppageName;\n      if (i + 1 < sz) routeString += ',';\n      else routeString += ')';\n    }\n    return routeString;\n  };\n\n  render() {\n    return (\n      <Col style={{ padding: \"0px\" }}>\n        <div>{\"RouteNo: \" + (this.props.route ? this.props.route.routeId : \"\")}</div>\n        <div style={{ fontSize: \"10px\", paddingLeft: \"0px\", paddingRight: \"0px\" }}>\n          {this.props.route && this.showRoute(this.props.route.routeDetail)}\n        </div>\n      </Col>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport ScheduleTopMenuBar from \"./ScheduleTopMenuBar\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getBusRoutes } from \"../../actions/BusRouteActions\";\nimport { getAllSchedules, deleteSchedule } from \"../../actions/ScheduleActions\";\nimport ScheduleDateTime from \"./ScheduleDateTime\";\nimport ShowRoute from \"./ShowRoute\";\n\nconst completedScheduleStyle = {\n  backgroundColor: \"#ebc6c6\"\n};\n\nclass Schedule extends Component {\n  constructor() {\n    super();\n    const pathNameComponents = window.location.pathname.split(\"/\");\n    let tmpPageNo = 1;\n    if (pathNameComponents.length === 4) {\n      tmpPageNo = parseInt(pathNameComponents[3]);\n    }\n    this.state = {\n      pageNo: tmpPageNo\n    };\n    this.deleteScheduleHandler = this.deleteScheduleHandler.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllSchedules();\n    this.props.getBusRoutes();\n  };\n\n  deleteScheduleHandler = scheduleId => {\n    this.props.deleteSchedule(scheduleId, this.props.history);\n  };\n\n  render() {\n    const rowsPerPage = 30;\n    const upperBound = this.state.pageNo * rowsPerPage;\n    const lowerBound = (this.state.pageNo - 1) * rowsPerPage + (this.state.pageNo > 1 ? 1 : 0);\n    const { schedule, busRoute } = this.props;\n\n    return (\n      <div>\n        <ScheduleTopMenuBar\n          data={{\n            pageNo: this.state.pageNo,\n            pageCount: parseInt(schedule.schedules.length / rowsPerPage) +\n              (schedule.schedules.length % rowsPerPage > 0 ? 1 : 0)\n          }}\n        />\n        <Row style={{ height: \"1300px\", overflow: \"auto\" }}>\n          <Col md={12}>\n            <Table size=\"sm\" bordered striped hover>\n              <thead style={{ textAlign: \"center\" }}>\n                <tr>\n                  <th>SL</th>\n                  <th>Date & Time</th>\n                  <th>Route</th>\n                  <th>Bus</th>\n                  <th>Driver</th>\n                  <th>Stuff</th>\n                  <th colSpan={2}>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {schedule.schedules.map((schedule, idx) => (\n                  (idx + 1 >= lowerBound && idx + 1 <= upperBound) ? (\n                    <tr\n                      key={idx}\n                      style={schedule.isComplete === true ? completedScheduleStyle : null}\n                    >\n                      <td style={{ textAlign: \"center\" }}>\n                        {idx + 1}\n                      </td>\n                      <td style={{ textAlign: \"center\" }}>\n                        <ScheduleDateTime date={schedule.date} />\n                      </td>\n                      <td style={{ textAlign: \"center\" }}>\n                        <ShowRoute route={\n                          busRoute.routes.find(\n                            route => route.routeId === schedule.route.routeId\n                          )\n                        } />\n                      </td>\n                      <td style={{ textAlign: \"center\" }}>\n                        <div>{\"BusNo: \" + schedule.bus.busId}</div>\n                        <div style={{ fontSize: \"11px\" }}>{schedule.bus.number}</div>\n                      </td>\n                      <td style={{ textAlign: \"center\" }}>\n                        <div>{\"DriverId: \" + schedule.driver.driverId}</div>\n                        <div style={{ fontSize: \"11px\" }}>{\"Name: \" + schedule.driver.user.firstName + \" \" + schedule.driver.user.lastName}</div>\n                      </td>\n                      <td style={{ textAlign: \"center\" }}>\n                        {schedule.stuff ?\n                          (<div>\n                            <div>{\"StuffId: \" + schedule.stuff.stuffId}</div>\n                            <div style={{ fontSize: \"11px\" }}>{\"Name: \" + schedule.stuff.user.firstName + \" \" + schedule.stuff.user.lastName}</div>\n                          </div>\n                          ) : null\n                        }\n                      </td>\n                      <td style={{ textAlign: \"center\" }}>\n                        <Link to={`/schedule/edit/${schedule.scheduleId}`} >\n                          <Button size=\"sm\" variant=\"outline-success\">\n                            <FontAwesomeIcon icon={faPen} />\n                          </Button>\n                        </Link>\n                      </td>\n                      <td style={{ textAlign: \"center\" }}>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-danger\"\n                          onClick={() => this.deleteScheduleHandler(schedule.scheduleId)}\n                        >\n                          <FontAwesomeIcon icon={faTrash} />\n                        </Button>\n                      </td>\n                    </tr>\n                  ) : null\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nSchedule.propTypes = {\n  schedule: PropTypes.object.isRequired,\n  busRoute: PropTypes.object.isRequired,\n  getAllSchedules: PropTypes.func.isRequired,\n  deleteSchedule: PropTypes.func.isRequired,\n  getBusRoutes: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  schedule: state.schedule,\n  busRoute: state.busRoute\n});\n\nexport default connect(\n  mapStateToProps, {\n  getAllSchedules,\n  deleteSchedule,\n  getBusRoutes\n}\n)(Schedule);","import Axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BUSES,\n  GET_BUS,\n  DELETE_BUS,\n  GET_AVAILABLE_BUSES,\n  MARK_BUSREPORT_AS_SOLVED,\n  DELETE_BUSREPORT,\n  GET_BUS_REQUISITIONS,\n  GET_BUS_REQUISITION,\n  DELETE_BUS_REQUISITION\n} from \"./types\";\n\nexport const addBus = (bus, reqType, history) => async dispatch => {\n  try {\n    await Axios.post(`/api/bus/${reqType}`, bus);\n    history.push(\"/bus\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getAllBuses = () => async dispatch => {\n  const res = await Axios.get(`/api/bus/all`);\n  let buses = [];\n  for (let i = 0; i < res.data.length; i++) {\n    let bus = res.data[i];\n    let tmpbus = {\n      busId: bus.busId,\n      number: bus.number,\n      oilTankCapacity: bus.oilTankCapacity,\n      gasCylinderCapacity: bus.gasCylinderCapacity,\n      isAvailable: bus.isAvailable,\n      schedules: (await Axios.get(`/api/bus/GLOBAL/schedule/${bus.busId}`)).data,\n      busReports: (await Axios.get(`/api/bus/busReport/${bus.busId}`)).data.filter(\n        busReport => busReport.solved === false\n      )\n    };\n    buses.push(tmpbus);\n  }\n  dispatch({\n    type: GET_BUSES,\n    payload: buses\n  });\n};\n\nexport const getBus = (busId, history) => async dispatch => {\n  try {\n    const res = await Axios.get(`/api/bus/GLOBAL/${busId}`);\n    dispatch({\n      type: GET_BUS,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/bus\");\n  }\n};\n\nexport const deleteBus = (busId, history) => async dispatch => {\n  if (\n    window.confirm(\"Are you sure?\")\n  ) {\n    try {\n      await Axios.delete(`/api/bus/${busId}`);\n      dispatch({\n        type: DELETE_BUS,\n        payload: busId\n      });\n    } catch (err) {\n      history.push(\"/bus\");\n    }\n  }\n};\n\nexport const getAllAvailableBuses = () => async dispatch => {\n  const res = await Axios.get(`/api/bus/all`);\n  let tmpBuses = res.data;\n  tmpBuses = tmpBuses.filter(bus => bus.isAvailable !== false);\n  dispatch({\n    type: GET_AVAILABLE_BUSES,\n    payload: tmpBuses\n  });\n};\n\nexport const markBusReportAsSolved = (busId, busReportId, history) => async dispatch => {\n  if (\n    window.confirm(\"Are you sure?\")\n  ) {\n    try {\n      await Axios.get(`/api/busReport/markAsSolved/${busReportId}`);\n      dispatch({\n        type: MARK_BUSREPORT_AS_SOLVED,\n        payload: { busId: busId, busReportId: busReportId }\n      });\n\n    } catch (err) {\n      history.push(\"/bus\");\n    }\n  }\n};\n\nexport const deleteBusReportFromBus = (busId, busReportId, history) => async dispatch => {\n  if (\n    window.confirm(\"Are you sure?\")\n  ) {\n    try {\n      await Axios.delete(`/api/busReport/${busReportId}`);\n      dispatch({\n        type: DELETE_BUSREPORT,\n        payload: { busId: busId, busReportId: busReportId }\n      });\n\n    } catch (err) {\n      history.push(\"/bus\");\n    }\n  }\n};\n\nexport const getAllBusRequisitions = () => async dispatch => {\n  const res = await Axios.get('/api/requisition/all');\n  let busRequisitions = res.data;\n  busRequisitions.sort(function (a, b) { return new Date(b.endDateTime) - new Date(a.endDateTime) });\n  dispatch({\n    type: GET_BUS_REQUISITIONS,\n    payload: busRequisitions\n  });\n};\n\n\nexport const createBusRequisitions = (busRequisition, history) => async dispatch => {\n  try {\n    await Axios.post('/api/requisition/add', busRequisition);\n    history.push('/bus/requisition');\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBusRequisition = (busRequisitionId, history) => async dispatch => {\n  try {\n    const res = await Axios.get(`/api/requisition/${busRequisitionId}`);\n    dispatch({\n      type: GET_BUS_REQUISITION,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push('/bus/requisition');\n  }\n};\n\nexport const deleteBusRequisition = (busRequisitionId, history) => async dispatch => {\n  if (\n    window.confirm(\"Are  you sure\")\n  ) {\n    try {\n      await Axios.delete(`/api/requisition/${busRequisitionId}`);\n      dispatch({\n        type: DELETE_BUS_REQUISITION,\n        payload: busRequisitionId\n      });\n    } catch (err) {\n      history.push('/bus/requisition');\n    }\n  }\n};","import Axios from 'axios';\nimport {\n  GET_DRIVERS_INSERVICE,\n  GET_ERRORS,\n  DELETE_DRIVER\n} from './types';\n\nexport const getAllDriversInservice = () => async dispatch => {\n  const res = await Axios.get(`/api/driver/inService/all`);\n  dispatch({\n    type: GET_DRIVERS_INSERVICE,\n    payload: res.data\n  });\n};\n\nexport const addNewDriverOrStuff = (user, reqType, history) => async dispatch => {\n  try {\n    await Axios.post(`/api/user/register/${reqType}`, user);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n    history.push(`/${reqType}`);\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteDriver = (driverId, history) => async dispatch => {\n  if (\n    window.confirm(\"Are you sure?\")\n  ) {\n    try {\n      await Axios.delete(`/api/driver/remove/${driverId}`);\n      dispatch({\n        type: DELETE_DRIVER,\n        payload: driverId\n      });\n    } catch (err) {\n      history.push('/driver');\n    }\n  }\n};","import Axios from \"axios\";\nimport { GET_STUFFS_INSERVICE, DELETE_STUFF } from \"./types\";\n\nexport const getAllStuffsInservice = () => async dispatch => {\n  const res = await Axios.get(`/api/stuff/inService/all`);\n  dispatch({\n    type: GET_STUFFS_INSERVICE,\n    payload: res.data\n  });\n};\n\nexport const deleteStuff = (stuffId, history) => async dispatch => {\n  if (\n    window.confirm(\"Are you sure?\")\n  ) {\n    try {\n      await Axios.delete(`/api/stuff/remove/${stuffId}`);\n      dispatch({\n        type: DELETE_STUFF,\n        payload: stuffId\n      });\n\n    } catch (err) {\n      history.push('/stuff');\n    }\n  }\n};","import React, { Component } from \"react\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createSchedule } from \"../../actions/ScheduleActions\";\nimport { getAllAvailableBuses } from \"../../actions/BusActions\";\nimport { getBusRoutes } from \"../../actions/BusRouteActions\";\nimport { getAllDriversInservice } from \"../../actions/DriverActions\";\nimport { getAllStuffsInservice } from \"../../actions/StuffActions\";\n\nimport classnames from \"classnames\";\n\n\nclass AddSchedule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scheduleId: \"\",\n      date: \"\",\n      time: \"\",\n      isComplete: \"\",\n      bus: {},\n      route: {},\n      driver: {},\n      stuff: \"\",\n      errors: {}\n    };\n    this.getDateForInput = this.getDateForInput.bind(this);\n    this.parseTimeString = this.parseTimeString.bind(this);\n    this.showRoute = this.showRoute.bind(this);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onChangeSelectorHandler = this.onChangeSelectorHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllAvailableBuses();\n    this.props.getBusRoutes();\n    this.props.getAllDriversInservice();\n    this.props.getAllStuffsInservice();\n  };\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  };\n\n  getDateForInput = tmpDate => {\n    let date = new Date(tmpDate);\n    return String(\n      date.getFullYear() +\n      \"-\" +\n      (date.getMonth() + 1 < 10 ? \"0\" : \"\") +\n      (date.getMonth() + 1) +\n      \"-\" +\n      (date.getDate() < 10 ? \"0\" : \"\") +\n      date.getDate()\n    );\n  };\n\n  parseTimeString = () => {\n    let timeFormat = this.state.time.split(':');\n    let tmpDate = new Date(this.state.date);\n    tmpDate.setHours(timeFormat[0]);\n    tmpDate.setMinutes(timeFormat[1]);\n    return tmpDate;\n  };\n\n  showRoute = stoppageList => {\n    let routeString = \"\";\n    for (let i = 0, sz = stoppageList.length; i < sz; i++) {\n      let stoppage = stoppageList[i];\n      routeString = routeString.concat(stoppage.stoppageName);\n      if (i + 1 < sz) routeString = routeString.concat(\", \");\n    }\n    return routeString;\n  };\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeSelectorHandler = (event, listName, fieldName) => {\n    if (parseInt(event.target.value) !== -1) {\n      this.setState({\n        [event.target.name]: this.props[listName].find(\n          element => (element[fieldName] === parseInt(event.target.value))\n        )\n      });\n    } else {\n      let tmp = { [fieldName]: \"-1\" };\n      this.setState({ [event.target.name]: tmp });\n    }\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const newSchedule = {\n      scheduleId: this.state.scheduleId,\n      date: this.parseTimeString(),\n      isComplete: this.state.isComplete,\n      bus: this.state.bus ? this.state.bus : {},\n      route: this.state.route ? this.state.route : {},\n      driver: this.state.driver ? this.state.driver : {},\n      stuff: this.state.stuff ? this.state.stuff : null\n    };\n    this.props.createSchedule(newSchedule, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container style={{ paddingTop: \"10px\" }}>\n        <Form onSubmit={this.onSubmitHandler}>\n          <Row>\n            <Col md={3}>\n              <Form.Group>\n                <Form.Label>Date</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.date }\n                  )}\n                  name=\"date\"\n                  type=\"date\"\n                  value={this.state.date && this.getDateForInput(this.state.date)}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.date && (\n                  <div className=\"invalid-feedback\">\n                    {errors.date}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={2}>\n              <Form.Group>\n                <Form.Label>Time</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.date }\n                  )}\n                  name=\"time\"\n                  type=\"time\"\n                  value={this.state.time}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.date && (\n                  <div className=\"invalid-feedback\">\n                    {errors.date}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={7}>\n              <Form.Group>\n                <Form.Label>Route</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (errors.route || errors.routeId) }\n                  )}\n                  as=\"select\"\n                  name=\"route\"\n                  value={this.state.route ? this.state.route.routeId : \"\"}\n                  onChange={\n                    (event) => this.onChangeSelectorHandler(event, \"routes\", \"routeId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    Select Route\n                  </option>\n                  {this.props.routes.map((route, idx) => (\n                    <option\n                      key={idx}\n                      value={route.routeId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {\"Route \" +\n                        route.routeId +\n                        \": \" +\n                        this.showRoute(route.routeDetail)}\n                    </option>\n                  ))}\n                </Form.Control>\n                {(errors.route || errors.routeId) && (\n                  <div className=\"invalid-feedback\">\n                    {(errors.route || errors.routeId)}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Bus</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (errors.bus || errors.busId) }\n                  )}\n                  as=\"select\"\n                  name=\"bus\"\n                  value={this.state.bus ? this.state.bus.busId : \"\"}\n                  onChange={\n                    (event) => this.onChangeSelectorHandler(event, \"availableBuses\", \"busId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    Select Bus\n                  </option>\n                  {this.props.availableBuses.map((bus, idx) => (\n                    <option\n                      key={idx}\n                      value={bus.busId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {\"BusId: \" + bus.busId + \", Number: \" + bus.number}\n                    </option>\n                  ))}\n                </Form.Control>\n                {(errors.bus || errors.busId) && (\n                  <div className=\"invalid-feedback\">\n                    {(errors.bus || errors.busId)}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Driver</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (errors.driver || errors.driverId) }\n                  )}\n                  as=\"select\"\n                  name=\"driver\"\n                  value={this.state.driver ? this.state.driver.driverId : \"\"}\n                  onChange={\n                    (event) => this.onChangeSelectorHandler(event, \"drivers\", \"driverId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    Select Driver\n                  </option>\n                  {this.props.drivers.map((driver, idx) => (\n                    <option\n                      key={idx}\n                      value={driver.driverId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {\"DriverId: \" + driver.driverId + \", Name: \" + driver.user.firstName + \" \" + driver.user.lastName}\n                    </option>\n                  ))}\n                </Form.Control>\n                {(errors.driver || errors.driverId) && (\n                  <div className=\"invalid-feedback\">\n                    {(errors.driver || errors.driverId)}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Stuff(Optional)</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (errors.stuff || errors.stuffId) }\n                  )}\n                  as=\"select\"\n                  name=\"stuff\"\n                  value={this.state.stuff ? this.state.stuff.stuffId : \"\"}\n                  onChange={\n                    (event) => this.onChangeSelectorHandler(event, \"stuffs\", \"stuffId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    Select Stuff\n                  </option>\n                  {this.props.stuffs.map((stuff, idx) => (\n                    <option\n                      key={idx}\n                      value={stuff.stuffId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {\"StuffId: \" + stuff.stuffId + \", Name: \" + stuff.user.firstName + \" \" + stuff.user.lastName}\n                    </option>\n                  ))}\n                </Form.Control>\n                {(errors.stuff || errors.stuffId) && (\n                  <div className=\"invalid-feedback\">\n                    {(errors.stuff || errors.stuffId)}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={3}>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Col>\n            <Col md={6}></Col>\n            <Col md={3}>\n              <Button\n                variant=\"secondary\"\n                type=\"reset\"\n                style={{ float: \"right\" }}\n              >\n                Reset\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nAddSchedule.propTypes = {\n  errors: PropTypes.object.isRequired,\n  createSchedule: PropTypes.func.isRequired,\n  getAllAvailableBuses: PropTypes.func.isRequired,\n  getBusRoutes: PropTypes.func.isRequired,\n  getAllDriversInservice: PropTypes.func.isRequired,\n  getAllStuffsInservice: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  availableBuses: state.bus.availableBuses,\n  routes: state.busRoute.routes,\n  drivers: state.driver.drivers,\n  stuffs: state.stuff.stuffs\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    createSchedule,\n    getAllAvailableBuses,\n    getBusRoutes,\n    getAllDriversInservice,\n    getAllStuffsInservice\n  }\n)(AddSchedule);\n","import React, { Component } from 'react'\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport classnames from \"classnames\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSchedule, getSchedule } from '../../actions/ScheduleActions';\nimport { getAllAvailableBuses } from '../../actions/BusActions';\nimport { getBusRoutes } from '../../actions/BusRouteActions';\nimport { getAllDriversInservice } from '../../actions/DriverActions';\nimport { getAllStuffsInservice } from '../../actions/StuffActions';\n\nclass UpdateSchedule extends Component {\n  constructor() {\n    super();\n    this.state = {\n      scheduleId: \"\",\n      date: \"\",\n      time: \"\",\n      isComplete: \"\",\n      bus: {},\n      route: {},\n      driver: {},\n      stuff: {},\n      errors: {}\n    };\n    this.getDateForInput = this.getDateForInput.bind(this);\n    this.parseTimeString = this.parseTimeString.bind(this);\n    this.showRoute = this.showRoute.bind(this);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onChangeSelectorHandler = this.onChangeSelectorHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  componentDidMount = () => {\n    const { scheduleId } = this.props.match.params;\n    this.props.getSchedule(scheduleId, this.props.history);\n    this.props.getAllAvailableBuses();\n    this.props.getBusRoutes();\n    this.props.getAllDriversInservice();\n    this.props.getAllStuffsInservice();\n  };\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      scheduleId,\n      date,\n      isComplete,\n      bus,\n      route,\n      driver,\n      stuff\n    } = nextProps.schedule;\n    let tmpDate = new Date(date);\n    this.setState({\n      scheduleId,\n      date,\n      time: String(\n        (tmpDate.getHours() < 10 ? \"0\" : \"\") + tmpDate.getHours() + \":\" +\n        (tmpDate.getMinutes() < 10 ? \"0\" : \"\") + tmpDate.getMinutes() + \":\" +\n        (tmpDate.getSeconds() < 10 ? \"0\" : \"\") + tmpDate.getSeconds()),\n      isComplete,\n      bus,\n      route,\n      driver,\n      stuff\n    });\n  };\n\n  getDateForInput = tmpDate => {\n    let date = new Date(tmpDate);\n    return String(\n      date.getFullYear() +\n      \"-\" +\n      (date.getMonth() + 1 < 10 ? \"0\" : \"\") +\n      (date.getMonth() + 1) +\n      \"-\" +\n      (date.getDate() < 10 ? \"0\" : \"\") +\n      date.getDate()\n    );\n  };\n\n  parseTimeString = () => {\n    let timeFormat = this.state.time.split(':');\n    let tmpDate = new Date(this.state.date);\n    tmpDate.setHours(timeFormat[0]);\n    tmpDate.setMinutes(timeFormat[1]);\n    return tmpDate;\n  };\n\n  showRoute = stoppageList => {\n    let routeString = \"\";\n    for (let i = 0, sz = stoppageList.length; i < sz; i++) {\n      let stoppage = stoppageList[i];\n      routeString = routeString.concat(stoppage.stoppageName);\n      if (i + 1 < sz) routeString = routeString.concat(\", \");\n    }\n    return routeString;\n  };\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeSelectorHandler = (event, listName, fieldName) => {\n    if (parseInt(event.target.value) !== -1) {\n      this.setState({\n        [event.target.name]: this.props[listName].find(\n          element => (element[fieldName] === parseInt(event.target.value))\n        )\n      });\n    } else {\n      let tmp = { [fieldName]: \"-1\" };\n      this.setState({ [event.target.name]: tmp });\n    }\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const editedSchedule = {\n      scheduleId: this.state.scheduleId,\n      date: this.parseTimeString(),\n      isComplete: this.state.isComplete,\n      bus: this.state.bus ? this.state.bus : {},\n      route: this.state.route ? this.state.route : {},\n      driver: this.state.driver ? this.state.driver : {},\n      stuff: this.state.stuff ? this.state.stuff : null\n    };\n    this.props.createSchedule(editedSchedule, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container style={{ paddingTop: \"10px\" }}>\n        <Form onSubmit={this.onSubmitHandler}>\n          <Row>\n            <Col md={3}>\n              <Form.Group>\n                <Form.Label>Date</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.date }\n                  )}\n                  name=\"date\"\n                  type=\"date\"\n                  value={this.state.date ? this.getDateForInput(this.state.date) : \"\"}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.date && (\n                  <div className=\"invalid-feedback\">\n                    {errors.date}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={2}>\n              <Form.Group>\n                <Form.Label>Time</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.date }\n                  )}\n                  name=\"time\"\n                  type=\"time\"\n                  value={this.state.time ? this.state.time : \"\"}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.date && (\n                  <div className=\"invalid-feedback\">\n                    {errors.date}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={7}>\n              <Form.Group>\n                <Form.Label>Route</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (errors.route || errors.routeId) }\n                  )}\n                  as=\"select\"\n                  name=\"route\"\n                  value={this.state.route ? this.state.route.routeId : \"\"}\n                  onChange={\n                    (event) => this.onChangeSelectorHandler(event, \"routes\", \"routeId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    Select Route\n                  </option>\n                  {this.props.routes.map((route, idx) => (\n                    <option\n                      key={idx}\n                      value={route.routeId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {\"Route \" +\n                        route.routeId +\n                        \": \" +\n                        this.showRoute(route.routeDetail)}\n                    </option>\n                  ))}\n                </Form.Control>\n                {(errors.route || errors.routeId) && (\n                  <div className=\"invalid-feedback\">\n                    {(errors.route || errors.routeId)}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Bus</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (errors.bus || errors.busId) }\n                  )}\n                  as=\"select\"\n                  name=\"bus\"\n                  value={this.state.bus ? this.state.bus.busId : \"\"}\n                  onChange={\n                    (event) => this.onChangeSelectorHandler(event, \"availableBuses\", \"busId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    Select Bus\n                  </option>\n                  {this.props.availableBuses.map((bus, idx) => (\n                    <option\n                      key={idx}\n                      value={bus.busId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {\"BusId: \" + bus.busId + \", Number: \" + bus.number}\n                    </option>\n                  ))}\n                </Form.Control>\n                {(errors.bus || errors.busId) && (\n                  <div className=\"invalid-feedback\">\n                    {(errors.bus || errors.busId)}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Driver</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (errors.driver || errors.driverId) }\n                  )}\n                  as=\"select\"\n                  name=\"driver\"\n                  value={this.state.driver ? this.state.driver.driverId : \"\"}\n                  onChange={\n                    (event) => this.onChangeSelectorHandler(event, \"drivers\", \"driverId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    Select Driver\n                  </option>\n                  {this.props.drivers.map((driver, idx) => (\n                    <option\n                      key={idx}\n                      value={driver.driverId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {\"DriverId: \" + driver.driverId + \", Name: \" + driver.user.firstName + \" \" + driver.user.lastName}\n                    </option>\n                  ))}\n                </Form.Control>\n                {(errors.driver || errors.driverId) && (\n                  <div className=\"invalid-feedback\">\n                    {(errors.driver || errors.driverId)}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Stuff(Optional)</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": (errors.stuff || errors.stuffId) }\n                  )}\n                  as=\"select\"\n                  name=\"stuff\"\n                  value={this.state.stuff ? this.state.stuff.stuffId : \"\"}\n                  onChange={\n                    (event) => this.onChangeSelectorHandler(event, \"stuffs\", \"stuffId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >\n                    Select Stuff\n                  </option>\n                  {this.props.stuffs.map((stuff, idx) => (\n                    <option\n                      key={idx}\n                      value={stuff.stuffId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {\"StuffId: \" + stuff.stuffId + \", Name: \" + stuff.user.firstName + \" \" + stuff.user.lastName}\n                    </option>\n                  ))}\n                </Form.Control>\n                {(errors.stuff || errors.stuffId) && (\n                  <div className=\"invalid-feedback\">\n                    {(errors.stuff || errors.stuffId)}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Is Complete?</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"isComplete\"\n                  value={this.state.isComplete ? this.state.isComplete : \"\"}\n                  onChange={this.onChangeHandler}\n                >\n                  <option value={false}>{\"No\"}</option>\n                  <option value={true} >{\"Yes\"}</option>\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={3}>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Col>\n            <Col md={6}></Col>\n            <Col md={3}>\n              <Button\n                variant=\"secondary\"\n                type=\"reset\"\n                style={{ float: \"right\" }}\n              >\n                Reset\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nUpdateSchedule.propTypes = {\n  errors: PropTypes.object.isRequired,\n  schedule: PropTypes.object.isRequired,\n  createSchedule: PropTypes.func.isRequired,\n  getAllAvailableBuses: PropTypes.func.isRequired,\n  getBusRoutes: PropTypes.func.isRequired,\n  getAllDriversInservice: PropTypes.func.isRequired,\n  getAllStuffsInservice: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  schedule: state.schedule.schedule,\n  availableBuses: state.bus.availableBuses,\n  routes: state.busRoute.routes,\n  drivers: state.driver.drivers,\n  stuffs: state.stuff.stuffs\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    createSchedule,\n    getSchedule,\n    getAllAvailableBuses,\n    getBusRoutes,\n    getAllDriversInservice,\n    getAllStuffsInservice\n  }\n)(UpdateSchedule);","import React, { Component } from 'react';\nimport { Col, Button, ButtonGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass BusTopMenuBar extends Component {\n  goToPageNo = (event, pageNo) => {\n    window.location.replace(`/bus/page/${pageNo}`);\n  };\n\n  render() {\n    const maxButtons = 5;\n    const buttons = [];\n\n    if (this.props.data.pageNo > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageNo - 1}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageNo - 1)}\n        >\n          {this.props.data.pageNo - 1}\n        </Button>\n      );\n    }\n\n    buttons.push(\n      <Button\n        key={this.props.data.pageNo}\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={event => this.goToPageNo(event, this.props.data.pageNo)}\n      >\n        {this.props.data.pageNo}\n      </Button>\n    );\n\n    for (\n      let i = this.props.data.pageNo + 1;\n      i <= Math.min(\n        this.props.data.pageCount - 1,\n        this.props.data.pageNo + maxButtons\n      );\n      i++\n    ) {\n      buttons.push(\n        <Button\n          key={i}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, i)}\n        >\n          {i}\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > maxButtons) {\n      buttons.push(\n        <Button\n          key={0}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          disabled\n        >\n          <strong>......</strong>\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageCount}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageCount)}\n        >\n          {this.props.data.pageCount}\n        </Button>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <Col md={2} style={{ padding: \"5px\", paddingLeft: \"15px\" }}>\n          <Link\n            to={{\n              pathname: \"/bus/add\",\n              busId: null,\n              returnLink: window.location.pathname\n            }}\n          >\n            <Button size=\"sm\" variant=\"outline-primary\">\n              Add Bus\n            </Button>\n          </Link>\n        </Col>\n        <Col md={2} style={{ padding: \"5px\", paddingLeft: \"15px\" }}>\n          <Link\n            to={\"/bus/requisition\"}\n          >\n            <Button\n              size=\"sm\"\n              variant=\"outline-info\"\n            >\n              Requisition\n            </Button>\n          </Link>\n        </Col>\n        <Col md={8} style={{ padding: \"5px\", paddingRight: \"15px\" }}>\n          <ButtonGroup size=\"sm\" style={{ float: \"right\" }}>\n            {buttons}\n          </ButtonGroup>\n        </Col>\n      </React.Fragment>\n\n    )\n  }\n}\n\n\nexport default BusTopMenuBar;","import React, { Component } from 'react'\nimport { Card, Col, Row, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nclass BusReportItem extends Component {\n  render() {\n    return (\n      <div style={{ paddingBottom: '10px' }}>\n        <Card border='warning' style={{ fontSize: '13px' }}>\n          <Card.Header>\n            <Row>\n              <Col md={9}>\n                <Card.Text>\n                  <strong>{'From: '}</strong>\n                  {this.props.busReport.driver.fullName +\n                    ' (ID: ' + this.props.busReport.driver.driverId + ')'}\n                  <br />\n                  <strong>{'Email: '}</strong>\n                  {this.props.busReport.driver.email}\n                </Card.Text>\n              </Col>\n              <Col md={3}>\n                <Card.Text>\n                  <strong>{'Date: '}</strong>\n                  {(new Date(this.props.busReport.date)).toDateString()}\n                </Card.Text>\n              </Col>\n            </Row>\n          </Card.Header>\n          <Card.Body>\n            {this.props.busReport.report.split('/').map((para, idx) => (\n              <Card.Text key={idx}>{para}</Card.Text>\n            ))}\n          </Card.Body>\n          <Card.Footer>\n            <Row>\n              <Col md={9}></Col>\n              <Col md={2}>\n                <Button\n                  size='sm'\n                  variant='outline-success'\n                  onClick={() => this.props.markBusReportAsSolved(\n                    this.props.busId,\n                    this.props.busReport.busReportId\n                  )}\n                >\n                  Mark as Solved\n                </Button>\n              </Col>\n              <Col md={1}>\n                <Button\n                  size='sm'\n                  variant='outline-danger'\n                  onClick={() => this.props.deleteBusReportHandler(\n                    this.props.busId,\n                    this.props.busReport.busReportId\n                  )}\n                >\n                  <FontAwesomeIcon icon={faTrash} />\n                </Button>\n              </Col>\n            </Row>\n\n          </Card.Footer>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default BusReportItem;","import React, { Component } from 'react'\nimport { Modal, Jumbotron } from 'react-bootstrap';\nimport BusReportItem from './BusReportItem';\n\nclass BusReports extends Component {\n  render() {\n    return (\n      <Modal\n        size='xl'\n        centered\n        show={this.props.show}\n        onHide={this.props.onHideHandler}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.bus.number + ' Reports'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Jumbotron\n            style={{ height: '500px', overflow: 'auto' }}\n          >\n            {this.props.busReports.sort(\n              function (a, b) { return new Date(b.date) - new Date(a.date) }\n            ).map((busReport, idx) => (\n              <BusReportItem\n                key={idx}\n                busReport={busReport}\n                busId={this.props.bus.busId}\n                markBusReportAsSolved={this.props.markBusReportAsSolved}\n                deleteBusReportHandler={this.props.deleteBusReportHandler}\n              />\n            ))}\n          </Jumbotron>\n        </Modal.Body>\n      </Modal>\n    )\n  }\n}\n\nexport default BusReports;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Table, Button } from \"react-bootstrap\";\n\nimport BusTopMenuBar from \"./BusTopMenuBar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getAllBuses,\n  deleteBus,\n  markBusReportAsSolved,\n  deleteBusReportFromBus\n} from \"../../actions/BusActions\";\nimport BusReports from \"./BusReports\";\n\nconst busNotAvailableStyle = {\n  backgroundColor: \"#ebc6c6\"\n};\n\nclass Bus extends Component {\n  constructor() {\n    super();\n    let tmpPageNo = 1;\n    const pathNameComponents = window.location.pathname.split(\"/\");\n    if (pathNameComponents.length === 4) {\n      tmpPageNo = parseInt(pathNameComponents[3]);\n    }\n    this.state = {\n      pageNo: tmpPageNo,\n      show: false\n    };\n    this.deleteBusHandler = this.deleteBusHandler.bind(this);\n    this.markBusReportAsSolved = this.markBusReportAsSolved.bind(this);\n    this.deleteBusReportHandler = this.deleteBusReportHandler.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllBuses();\n  };\n\n  deleteBusHandler = busId => {\n    this.props.deleteBus(busId, this.props.history);\n  };\n\n  markBusReportAsSolved = (busId, busReportId) => {\n    this.props.markBusReportAsSolved(busId, busReportId, this.props.history);\n  };\n\n  deleteBusReportHandler = (busId, busReportId) => {\n    this.props.deleteBusReportFromBus(busId, busReportId, this.props.history);\n  };\n\n  render() {\n    const rowsPerPage = 30;\n    const upperBound = this.state.pageNo * rowsPerPage;\n    const lowerBound = (this.state.pageNo - 1) * rowsPerPage + (this.state.pageNo > 1 ? 1 : 0);\n    const { bus } = this.props;\n\n    return (\n      <Row>\n        <BusTopMenuBar\n          data={{\n            pageNo: this.state.pageNo,\n            pageCount: parseInt(bus.buses.length / rowsPerPage) +\n              (bus.buses.length % rowsPerPage > 0 ? 1 : 0)\n          }}\n        />\n        <Col md={12} style={{ paddingTop: \"10px\" }}>\n          <Table size=\"sm\" bordered hover striped>\n            <thead style={{ textAlign: \"center\", fontSize: \"12px\" }}>\n              <tr>\n                <th>SL</th>\n                <th>Number</th>\n                <th>Oil Tank Capacity</th>\n                <th>Gas Cylinder Capacity</th>\n                <th>Is Available</th>\n                <th colSpan={2}>Action</th>\n              </tr>\n            </thead>\n            <tbody style={{ textAlign: \"center\" }}>\n              {bus.buses.map((bus, idx) => (\n                (idx + 1 >= lowerBound && idx + 1 <= upperBound) ? (\n                  <tr key={idx} style={bus.isAvailable === false ? busNotAvailableStyle : null}>\n                    <td>{idx + 1}</td>\n                    <td>\n                      <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                          {bus.number}\n                        </Col>\n                        <Col md={2}>\n                          {bus.busReports.length > 0 && (\n                            <div>\n                              <Button\n                                size=\"sm\"\n                                variant=\"danger\"\n                                style={{ borderRadius: \"30px\", fontWeight: \"800\" }}\n                                onClick={() => this.setState({ show: true })}\n                              >\n                                {bus.busReports.length}\n                              </Button>\n                              <BusReports\n                                show={this.state.show}\n                                bus={{\n                                  busId: bus.busId,\n                                  number: bus.number\n                                }}\n                                busReports={bus.busReports.map(busReport => {\n                                  let tmpBusReport = {\n                                    busReportId: busReport.busReportId,\n                                    date: busReport.date,\n                                    report: busReport.report,\n                                    driver: {\n                                      driverId: busReport.driver.driverId,\n                                      fullName: busReport.driver.user.firstName + ' ' + busReport.driver.user.firstName,\n                                      email: busReport.driver.user.email\n                                    }\n                                  };\n                                  return tmpBusReport;\n                                })}\n                                onHideHandler={() => this.setState({ show: false })}\n                                markBusReportAsSolved={this.markBusReportAsSolved}\n                                deleteBusReportHandler={this.deleteBusReportHandler}\n                              />\n                            </div>\n                          )}\n                        </Col>\n                      </Row>\n                    </td>\n                    <td>{bus.oilTankCapacity}</td>\n                    <td>{bus.gasCylinderCapacity}</td>\n                    <td>{bus.isAvailable === true ? \"YES\" : \"NO\"}</td>\n                    <td>\n                      <Link to={\"/bus/edit/\" + bus.busId}>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-success\"\n                        >\n                          <FontAwesomeIcon icon={faPen} />\n                        </Button>\n                      </Link>\n                    </td>\n                    <td>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline-danger\"\n                        onClick={() => this.deleteBusHandler(bus.busId)}\n                      >\n                        <FontAwesomeIcon icon={faTrash} />\n                      </Button>\n                    </td>\n                  </tr>\n                ) : null\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nBus.protoType = {\n  bus: PropTypes.object.isRequired,\n  getAllBuses: PropTypes.func.isRequired,\n  deleteBus: PropTypes.func.isRequired,\n  markBusReportAsSolved: PropTypes.func.isRequired,\n  deleteBusReportFromBus: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({ bus: state.bus });\n\nexport default connect(\n  mapStateToProps,\n  {\n    getAllBuses,\n    deleteBus,\n    markBusReportAsSolved,\n    deleteBusReportFromBus\n  })(Bus);\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Form,\n  Row,\n  Col,\n  Button\n} from 'react-bootstrap';\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addBus } from \"../../actions/BusActions\";\n\nimport classnames from \"classnames\";\n\nclass AddBus extends Component {\n  constructor() {\n    super();\n    this.state = {\n      busId: \"\",\n      number: \"\",\n      oilTankCapacity: \"\",\n      gasCylinderCapacity: \"\",\n      isAvailable: false,\n      errors: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  };\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const newBus = {\n      busId: this.state.busId,\n      number: this.state.number,\n      oilTankCapacity: this.state.oilTankCapacity,\n      gasCylinderCapacity: this.state.gasCylinderCapacity,\n      isAvailable: this.state.isAvailable\n    };\n    this.props.addBus(newBus, \"add\", this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container style={{ padding: \"5px\" }}>\n        <Form onSubmit={this.onSubmitHandler}>\n          <Row style={{ padding: \"15px\" }}>\n            <strong>Add new bus</strong>\n          </Row>\n          <Row>\n            <Col md={8}>\n              <Form.Group>\n                <Form.Label>Bus Number</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.number }\n                  )}\n                  name=\"number\"\n                  type=\"text\"\n                  value={this.state.number}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.number && (\n                  <div className=\"invalid-feedback\">\n                    {errors.number}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Is Available</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.isAvailable }\n                  )}\n                  name=\"isAvailable\"\n                  as=\"select\"\n                  value={this.state.isAvailable}\n                  onChange={this.onChangeHandler}\n                >\n                  <option key={1} value=\"false\" >No</option>\n                  <option key={2} value=\"true\">Yes</option>\n                </Form.Control>\n                {errors.isAvailable && (\n                  <div className=\"invalid-feedback\">\n                    {errors.isAvailable}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>Oil Tank capacity (Liters)</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.oilTankCapacity }\n                  )}\n                  name=\"oilTankCapacity\"\n                  type=\"number\"\n                  value={this.state.oilTankCapacity}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.oilTankCapacity && (\n                  <div className=\"invalid-feedback\">\n                    {errors.oilTankCapacity}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>Gas Cylinder capacity (Liters)</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.gasCylinderCapacity }\n                  )}\n                  name=\"gasCylinderCapacity\"\n                  type=\"number\"\n                  value={this.state.gasCylinderCapacity}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.gasCylinderCapacity && (\n                  <div className=\"invalid-feedback\">\n                    {errors.gasCylinderCapacity}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n              >\n                Submit\n              </Button>\n            </Col>\n            <Col md={6}>\n              <Button\n                type=\"reset\"\n                variant=\"secondary\"\n                style={{ float: \"right\" }}\n              >\n                Reset\n            </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    )\n  }\n}\n\n\nAddBus.propTypes = {\n  addBus: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({ errors: state.errors });\n\nexport default connect(mapStateToProps, { addBus })(AddBus);","import React, { Component } from 'react'\nimport { Container, Form, Col, Button, Row } from 'react-bootstrap';\nimport classnames from \"classnames\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { getBus, addBus } from \"../../actions/BusActions\"\n\n\nclass UpdateBus extends Component {\n  constructor() {\n    super();\n    this.state = {\n      busId: \"\",\n      number: \"\",\n      oilTankCapacity: \"\",\n      gasCylinderCapacity: \"\",\n      isAvailable: false,\n      errors: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n\n  componentDidMount = () => {\n    const { busId } = this.props.match.params;\n    this.props.getBus(busId, this.props.history);\n  };\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      busId,\n      number,\n      oilTankCapacity,\n      gasCylinderCapacity,\n      isAvailable\n    } = nextProps.bus;\n\n    this.setState({\n      busId,\n      number,\n      oilTankCapacity,\n      gasCylinderCapacity,\n      isAvailable\n    });\n  };\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const editedBus = {\n      busId: this.state.busId,\n      number: this.state.number,\n      oilTankCapacity: this.state.oilTankCapacity,\n      gasCylinderCapacity: this.state.gasCylinderCapacity,\n      isAvailable: this.state.isAvailable\n    };\n    this.props.addBus(editedBus, \"update\", this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container style={{ padding: \"5px\" }}>\n        <Form onSubmit={this.onSubmitHandler}>\n          <Row style={{ padding: \"15px\" }}>\n            <strong>Edit </strong>\n          </Row>\n          <Row>\n            <Col md={8}>\n              <Form.Group>\n                <Form.Label>Bus Number</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.number }\n                  )}\n                  name=\"number\"\n                  type=\"text\"\n                  value={this.state.number}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.number && (\n                  <div className=\"invalid-feedback\">\n                    {errors.number}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Is Available</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.isAvailable }\n                  )}\n                  name=\"isAvailable\"\n                  as=\"select\"\n                  value={this.state.isAvailable}\n                  onChange={this.onChangeHandler}\n                >\n                  <option key={1} value=\"false\" >No</option>\n                  <option key={2} value=\"true\">Yes</option>\n                </Form.Control>\n                {errors.isAvailable && (\n                  <div className=\"invalid-feedback\">\n                    {errors.isAvailable}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>Oil Tank capacity (Liters)</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.oilTankCapacity }\n                  )}\n                  name=\"oilTankCapacity\"\n                  type=\"number\"\n                  value={this.state.oilTankCapacity}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.oilTankCapacity && (\n                  <div className=\"invalid-feedback\">\n                    {errors.oilTankCapacity}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>Gas Cylinder capacity (Liters)</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.gasCylinderCapacity }\n                  )}\n                  name=\"gasCylinderCapacity\"\n                  type=\"number\"\n                  value={this.state.gasCylinderCapacity}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.gasCylinderCapacity && (\n                  <div className=\"invalid-feedback\">\n                    {errors.gasCylinderCapacity}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n              >\n                Submit\n              </Button>\n            </Col>\n            <Col md={6}>\n              <Button\n                type=\"reset\"\n                variant=\"secondary\"\n                style={{ float: \"right\" }}\n              >\n                Reset\n            </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nUpdateBus.propTypes = {\n  errors: PropTypes.object.isRequired,\n  bus: PropTypes.object.isRequired,\n  getBus: PropTypes.func.isRequired,\n  addBus: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  bus: state.bus.bus\n});\n\nexport default connect(mapStateToProps, { getBus, addBus })(UpdateBus);","import React, { Component } from 'react'\nimport { Col, ButtonGroup, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass BusRequisitionTopBar extends Component {\n  constructor() {\n    super();\n    this.goToPageNo = this.goToPageNo.bind(this);\n  }\n\n  goToPageNo = (event, pageNo) => {\n    window.location.replace(`/bus/requisition/page/${pageNo}`);\n  };\n\n  render() {\n    const maxButtons = 5;\n    const buttons = [];\n\n    if (this.props.data.pageNo > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageNo - 1}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageNo - 1)}\n        >\n          {this.props.data.pageNo - 1}\n        </Button>\n      );\n    }\n\n    buttons.push(\n      <Button\n        key={this.props.data.pageNo}\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={event => this.goToPageNo(event, this.props.data.pageNo)}\n      >\n        {this.props.data.pageNo}\n      </Button>\n    );\n\n    for (\n      let i = this.props.data.pageNo + 1;\n      i <= Math.min(\n        this.props.data.pageCount - 1,\n        this.props.data.pageNo + maxButtons\n      );\n      i++\n    ) {\n      buttons.push(\n        <Button\n          key={i}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, i)}\n        >\n          {i}\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > maxButtons) {\n      buttons.push(\n        <Button\n          key={0}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          disabled\n        >\n          <strong>......</strong>\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageCount}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageCount)}\n        >\n          {this.props.data.pageCount}\n        </Button>\n      );\n    }\n\n\n    return (\n      <React.Fragment>\n        <Col md={3} style={{ padding: \"5px\", paddingLeft: \"15px\" }}>\n          <Link to={'/bus/requisition/add'}>\n            <Button size=\"sm\" variant=\"outline-primary\">\n              Add Rquisition\n            </Button>\n          </Link>\n        </Col>\n        <Col md={9} style={{ padding: \"5px\", paddingRight: \"15px\" }}>\n          <ButtonGroup size=\"sm\" style={{ float: \"right\" }}>\n            {buttons}\n          </ButtonGroup>\n        </Col>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default BusRequisitionTopBar;\n","import React, { Component } from 'react'\nimport { Container, Row, Table, Col, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllBusRequisitions, deleteBusRequisition } from '../../actions/BusActions';\nimport BusRequisitionTopBar from './BusRequisitionTopBar';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst busRequsitionExpired = {\n  backgroundColor: \"#ebc6c6\"\n};\n\nclass BusRequisition extends Component {\n  constructor() {\n    super();\n    let tmpPageNo = 1;\n    const pathWords = window.location.pathname.split(\"/\");\n    if (pathWords.length === 5) {\n      tmpPageNo = parseInt(pathWords[4]);\n    }\n    this.state = {\n      pageNo: tmpPageNo\n    };\n    this.deleteBusRequisition = this.deleteBusRequisition.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllBusRequisitions();\n  };\n\n  deleteBusRequisition = requisitionId => {\n    this.props.deleteBusRequisition(requisitionId, this.props.history);\n  };\n\n  render() {\n    const rowsPerPage = 30;\n    const upperBound = this.state.pageNo * rowsPerPage;\n    const lowerBound = (this.state.pageNo - 1) * rowsPerPage + (this.state.pageNo > 1 ? 1 : 0);\n    const { busRequsitions } = this.props;\n\n    return (\n      <Container style={{ padding: \"5px\" }}>\n        <Row>\n          <BusRequisitionTopBar\n            data={{\n              pageNo: this.state.pageNo,\n              pageCount: parseInt(busRequsitions.length / rowsPerPage) +\n                (busRequsitions.length % rowsPerPage > 0 ? 1 : 0)\n            }}\n          />\n        </Row>\n        <Container\n          style={{\n            paddingLeft: \"0px\",\n            paddingRight: \"0px\",\n            height: \"1290px\",\n            overflow: \"auto\"\n          }}\n        >\n          <Table size=\"sm\" bordered hover striped>\n            <thead style={{ textAlign: \"center\" }}>\n              <tr>\n                <th>SL</th>\n                <th>Starting Date & Time</th>\n                <th>Finishing Date & Time</th>\n                <th>Bus</th>\n                <th>Driver</th>\n                <th>User</th>\n                <th colSpan={2}>Action</th>\n              </tr>\n            </thead>\n            <tbody style={{ textAlign: \"center\" }}>\n              {busRequsitions.map((busRequsition, idx) => (\n                (idx + 1 >= lowerBound && idx + 1 <= upperBound) && (\n                  <tr\n                    key={idx}\n                    style={busRequsition.isExpired === true ? busRequsitionExpired : null}\n                  >\n                    <td>{idx + 1}</td>\n                    <td>\n                      <Col style={{ padding: \"0px\", fontSize: \"11px\" }}>\n                        <div>{(new Date(busRequsition.startDateTime).toDateString())}</div>\n                        <div>{(new Date(busRequsition.startDateTime).toLocaleTimeString())}</div>\n                      </Col>\n                    </td>\n                    <td>\n                      <Col style={{ padding: \"0px\", fontSize: \"11px\" }}>\n                        <div>{(new Date(busRequsition.endDateTime).toDateString())}</div>\n                        <div>{(new Date(busRequsition.endDateTime).toLocaleTimeString())}</div>\n                      </Col>\n                    </td>\n                    <td>\n                      <Col style={{ padding: \"0px\", fontSize: \"11px\" }}>\n                        <div>{\"ID: \" + busRequsition.bus.busId}</div>\n                        <div>{\"Number: \" + busRequsition.bus.number}</div>\n                      </Col>\n                    </td>\n                    <td>\n                      <Col style={{ padding: \"0px\", fontSize: \"11px\" }}>\n                        <div>{\"Name: \" + busRequsition.driver.user.firstName + ' ' + busRequsition.driver.user.lastName}</div>\n                        <div>{\"Email: \" + busRequsition.driver.user.email}</div>\n                        <div>{\"Mobile: \" + busRequsition.driver.user.mobileNo}</div>\n                      </Col>\n                    </td>\n                    <td>\n                      <Col style={{ padding: \"0px\", fontSize: \"11px\" }}>\n                        <div>{\"Name: \" + busRequsition.user.firstName + ' ' + busRequsition.user.lastName}</div>\n                        <div>{\"Email: \" + busRequsition.user.email}</div>\n                        <div>{\"Mobile: \" + busRequsition.user.mobileNo}</div>\n                      </Col>\n                    </td>\n                    <td>\n                      <Link to={`/bus/requisition/edit/${busRequsition.requisitionId}`}>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-success\"\n                        >\n                          <FontAwesomeIcon icon={faPen} />\n                        </Button>\n                      </Link>\n                    </td>\n                    <td>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline-danger\"\n                        onClick={() => this.deleteBusRequisition(busRequsition.requisitionId)}\n                      >\n                        <FontAwesomeIcon icon={faTrash} />\n                      </Button>\n                    </td>\n                  </tr>\n                )\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n      </Container>\n    )\n  }\n}\n\nBusRequisition.propTypes = {\n  getAllBusRequisitions: PropTypes.func.isRequired,\n  deleteBusRequisition: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  busRequsitions: state.bus.busRequsitions\n});\n\nexport default connect(\n  mapStateToProps,\n  { getAllBusRequisitions, deleteBusRequisition }\n)(BusRequisition);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllUsers } from '../../actions/UserActions';\nimport {\n  createBusRequisitions,\n  getBusRequisition,\n  getAllAvailableBuses\n} from '../../actions/BusActions';\nimport { getAllDriversInservice } from '../../actions/DriverActions'\nimport { Container, Jumbotron, Form, Row, Button } from 'react-bootstrap';\nimport classnames from 'classnames';\n\nclass CreateBusRequisition extends Component {\n  constructor() {\n    super();\n    let pathNameWords = window.location.pathname.split('/');\n    this.state = {\n      requisitionId: \"\",\n      startDateTime: \"\",\n      endDateTime: \"\",\n      isExpired: false,\n      bus: {},\n      driver: {},\n      user: {},\n      type: pathNameWords[3],\n      errors: {},\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onChangeSelectorHandler = this.onChangeSelectorHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.parseDateToString = this.parseDateToString.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllUsers();\n    this.props.getAllAvailableBuses();\n    this.props.getAllDriversInservice();\n    if (this.state.type === \"edit\") {\n      const { requisitionId } = this.props.match.params;\n      this.props.getBusRequisition(requisitionId, this.props.history);\n    }\n  };\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    if (this.state.type === \"edit\" && nextProps.busRequsition) {\n      const {\n        requisitionId,\n        startDateTime,\n        endDateTime,\n        isExpired,\n        user,\n        bus,\n        driver\n      } = nextProps.busRequsition;\n\n      this.setState({\n        requisitionId,\n        startDateTime: this.parseDateToString(startDateTime),\n        endDateTime: this.parseDateToString(endDateTime),\n        isExpired: (isExpired ? isExpired : false),\n        user,\n        bus,\n        driver\n      });\n    }\n  };\n\n  parseDateToString = dateStr => {\n    let date = new Date(dateStr);\n    return date.getFullYear() + \"-\" +\n      (date.getMonth() < 10 ? \"0\" : \"\") + date.getMonth() + \"-\" +\n      (date.getDate() < 10 ? \"0\" : \"\") + date.getDate() + \"T\" +\n      (date.getHours() < 10 ? \"0\" : \"\") + date.getHours() + \":\" +\n      (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes();\n  };\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeSelectorHandler = (event, listName, fieldName) => {\n    if (parseInt(event.target.value) !== -1) {\n      this.setState({\n        [event.target.name]: this.props[listName].find(\n          element => (element[fieldName] === parseInt(event.target.value))\n        )\n      });\n    } else {\n      let tmp = { [fieldName]: \"-1\" };\n      this.setState({ [event.target.name]: tmp });\n    }\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    let tmpDate = new Date(this.state.startDateTime);\n    let tmpStartDateTime = tmpDate;\n    tmpStartDateTime.setHours(tmpDate.getHours());\n    tmpStartDateTime.setMinutes(tmpDate.getMinutes());\n\n    tmpDate = new Date(this.state.endDateTime);\n    let tmpEndDateTime = tmpDate;\n    tmpEndDateTime.setHours(tmpDate.getHours());\n    tmpEndDateTime.setMinutes(tmpDate.getMinutes());\n\n    const newBusRequisition = {\n      requisitionId: this.state.requisitionId,\n      startDateTime: tmpStartDateTime,\n      endDateTime: tmpEndDateTime,\n      isExpired: this.state.isExpired,\n      user: this.state.user ? this.state.user : {},\n      bus: this.state.bus ? this.state.bus : {},\n      driver: this.state.driver ? this.state.driver : {}\n    };\n    this.props.createBusRequisitions(newBusRequisition, this.props.history);\n  };\n\n  render() {\n    const { users, buses, drivers, errors } = this.props;\n\n    return (\n      <Container style={{ padding: \"10px\" }}>\n        <Jumbotron>\n          <Form onSubmit={this.onSubmitHandler}>\n            <Row>\n              <Form.Group className=\"col-md-4\">\n                <Form.Label>Stating Date & Time</Form.Label>\n                <input\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.startDateTime }\n                  )}\n                  name=\"startDateTime\"\n                  type=\"datetime-local\"\n                  value={this.state.startDateTime}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.startDateTime && (\n                  <div className=\"invalid-feedback\">\n                    {errors.startDateTime}\n                  </div>\n                )}\n              </Form.Group>\n              <Form.Group className=\"col-md-4\">\n                <Form.Label>Finishing Date & Time</Form.Label>\n                <input\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.endDateTime }\n                  )}\n                  name=\"endDateTime\"\n                  type=\"datetime-local\"\n                  value={this.state.endDateTime}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.endDateTime && (\n                  <div className=\"invalid-feedback\">\n                    {errors.endDateTime}\n                  </div>\n                )}\n              </Form.Group>\n            </Row>\n            <Row>\n              <Form.Group className=\"col-md-6\">\n                <Form.Label>Requested User</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.user }\n                  )}\n                  as=\"select\"\n                  name=\"user\"\n                  value={this.state.user ? this.state.user.userId : \"\"}\n                  onChange={\n                    event => this.onChangeSelectorHandler(event, \"users\", \"userId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >Selete User email</option>\n                  {users.map((user, idx) => (\n                    <option\n                      key={idx}\n                      value={user.userId}\n                    >\n                      {user.email}\n                    </option>\n                  ))}\n                </Form.Control>\n                {errors.user && (\n                  <div className=\"invalid-feedback\">\n                    {errors.user}\n                  </div>\n                )}\n              </Form.Group>\n            </Row>\n            <Row>\n              <Form.Group className=\"col-md-6\">\n                <Form.Label>Bus</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.bus }\n                  )}\n                  as=\"select\"\n                  name=\"bus\"\n                  value={this.state.bus ? this.state.bus.busId : \"\"}\n                  onChange={\n                    event => this.onChangeSelectorHandler(event, \"buses\", \"busId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >Selete Bus</option>\n                  {buses.map((bus, idx) => (\n                    <option\n                      key={idx}\n                      value={bus.busId}\n                    >\n                      {bus.number}\n                    </option>\n                  ))}\n                </Form.Control>\n                {errors.bus && (\n                  <div className=\"invalid-feedback\">\n                    {errors.bus}\n                  </div>\n                )}\n              </Form.Group>\n\n              <Form.Group className=\"col-md-6\">\n                <Form.Label>Driver</Form.Label>\n                <Form.Control\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.driver }\n                  )}\n                  as=\"select\"\n                  name=\"driver\"\n                  value={this.state.driver ? this.state.driver.driverId : \"\"}\n                  onChange={\n                    event => this.onChangeSelectorHandler(event, \"drivers\", \"driverId\")\n                  }\n                  style={{ fontSize: \"12px\" }}\n                >\n\n                  <option\n                    value={{}}\n                    style={{ fontSize: \"12px\" }}\n                  >Selete Driver</option>\n                  {drivers.map((driver, idx) => (\n                    <option\n                      key={idx}\n                      value={driver.driverId}\n                    >\n                      {driver.user.email}\n                    </option>\n                  ))}\n                </Form.Control>\n                {errors.driver && (\n                  <div className=\"invalid-feedback\">\n                    {errors.driver}\n                  </div>\n                )}\n              </Form.Group>\n            </Row>\n            {this.state.type === \"edit\" && (\n              <Row>\n                <Form.Group className=\"col-md-4\">\n                  <Form.Label>Is Expired</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"isExpired\"\n                    value={this.state.isExpired}\n                    onChange={this.onChangeHandler}\n                  >\n                    <option value=\"false\">No</option>\n                    <option value=\"true\">Yes</option>\n                  </Form.Control>\n                </Form.Group>\n              </Row>\n            )}\n            <Row>\n              <br />\n            </Row>\n            <Row>\n              <Form.Group className=\"col-md-2\">\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                >Submit</Button>\n              </Form.Group>\n            </Row>\n          </Form>\n        </Jumbotron>\n      </Container>\n    )\n  }\n}\n\nCreateBusRequisition.propTypes = {\n  getAllUsers: PropTypes.func.isRequired,\n  getAllAvailableBuses: PropTypes.func.isRequired,\n  getAllDriversInservice: PropTypes.func.isRequired,\n  createBusRequisitions: PropTypes.func.isRequired,\n  getBusRequisition: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  users: state.user.users,\n  buses: state.bus.availableBuses,\n  drivers: state.driver.drivers,\n  busRequsition: state.bus.busRequsition,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getAllUsers,\n    getAllAvailableBuses,\n    getAllDriversInservice,\n    createBusRequisitions,\n    getBusRequisition\n  }\n)(CreateBusRequisition);\n","import Axios from 'axios';\nimport { GET_USERS } from './types';\n\nexport const getAllUsers = () => async dispatch => {\n  const res = await Axios.get('/api/user/all');\n  dispatch({\n    type: GET_USERS,\n    payload: res.data\n  });\n};","import React, { Component } from 'react'\nimport { Col, Button, ButtonGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass BusRouteTopMenuBar extends Component {\n  goToPageNo = (event, pageNo) => {\n    window.location.replace(`/route/page/${pageNo}`);\n  };\n\n  render() {\n    const maxButtons = 5;\n    const buttons = [];\n\n    if (this.props.data.pageNo > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageNo - 1}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageNo - 1)}\n        >\n          {this.props.data.pageNo - 1}\n        </Button>\n      );\n    }\n\n    buttons.push(\n      <Button\n        key={this.props.data.pageNo}\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={event => this.goToPageNo(event, this.props.data.pageNo)}\n      >\n        {this.props.data.pageNo}\n      </Button>\n    );\n\n    for (\n      let i = this.props.data.pageNo + 1;\n      i <= Math.min(\n        this.props.data.pageCount - 1,\n        this.props.data.pageNo + maxButtons\n      );\n      i++\n    ) {\n      buttons.push(\n        <Button\n          key={i}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, i)}\n        >\n          {i}\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > maxButtons) {\n      buttons.push(\n        <Button\n          key={0}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          disabled\n        >\n          <strong>......</strong>\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageCount}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageCount)}\n        >\n          {this.props.data.pageCount}\n        </Button>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <Col md={3} style={{ padding: \"5px\", paddingLeft: \"15px\" }}>\n          <Link\n            to={{\n              pathname: \"/route/add\",\n              routeId: null,\n              returnLink: window.location.pathname\n            }}\n          >\n            <Button size=\"sm\" variant=\"outline-primary\">\n              Add Route\n            </Button>\n          </Link>\n        </Col>\n        <Col md={9} style={{ padding: \"5px\", paddingRight: \"15px\" }}>\n          <ButtonGroup size=\"sm\" style={{ float: \"right\" }}>\n            {buttons}\n          </ButtonGroup>\n        </Col>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default BusRouteTopMenuBar;\n","import React, { Component } from \"react\";\nimport { Table, Col, Row, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport BusRouteTopMenuBar from \"./BusRouteTopMenuBar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getBusRoutes, deleteBusRoute } from \"../../actions/BusRouteActions\";\n\nclass BusRoute extends Component {\n  constructor() {\n    super();\n\n    let tmpPageNo = 1;\n    const pathNameComponents = window.location.pathname.split(\"/\");\n    if (pathNameComponents.length === 4) {\n      tmpPageNo = parseInt(pathNameComponents[3]);\n    }\n\n    this.state = {\n      pageNo: tmpPageNo\n    };\n    this.showRoute = this.showRoute.bind(this);\n    this.deleteRouteHandler = this.deleteRouteHandler.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getBusRoutes();\n  };\n\n  showRoute = stoppageList => {\n    let routeString = \"\";\n    for (let i = 0, sz = stoppageList.length; i < sz; i++) {\n      let stoppage = stoppageList[i];\n      routeString = routeString.concat(stoppage.stoppageName);\n      if (i + 1 < sz) routeString = routeString.concat(\", \");\n    }\n    return routeString;\n  };\n\n  deleteRouteHandler = routeId => {\n    this.props.deleteBusRoute(routeId, this.props.history);\n  };\n\n  render() {\n    const rowsPerPage = 20;\n    const upperBound = this.state.pageNo * rowsPerPage;\n    const lowerBound = (this.state.pageNo - 1) * rowsPerPage + (this.state.pageNo > 1 ? 1 : 0);\n    const { busRoute } = this.props;\n\n    return (\n      <Row>\n        <BusRouteTopMenuBar\n          data={{\n            pageNo: this.state.pageNo,\n            pageCount: parseInt(busRoute.routes.length / rowsPerPage) +\n              (busRoute.routes.length % rowsPerPage > 0 ? 1 : 0)\n          }}\n        />\n        <Col md={12} style={{ paddingTop: \"10px\" }}>\n          <Table\n            size=\"sm\"\n            bordered\n            hover\n            striped\n            style={{ textAlign: \"center\" }}\n          >\n            <thead>\n              <tr>\n                <th>SL</th>\n                <th>Route No</th>\n                <th>Route</th>\n                <th colSpan={2}>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {busRoute.routes.map((route, idx) => (\n                (idx + 1 >= lowerBound && idx + 1 <= upperBound) ? (\n                  <tr key={idx}>\n                    <td>{idx + 1}</td>\n                    <td>{route.routeId}</td>\n                    <td style={{ textAlign: \"left\" }}>\n                      {this.showRoute(route.routeDetail)}\n                    </td>\n                    <td>\n                      <Link to={\"/route/edit/\" + route.routeId}>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-success\"\n                        >\n                          <FontAwesomeIcon icon={faPen} />\n                        </Button>\n                      </Link>\n                    </td>\n                    <td>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline-danger\"\n                        onClick={() => this.deleteRouteHandler(route.routeId)}\n                      >\n                        <FontAwesomeIcon icon={faTrash} />\n                      </Button>\n                    </td>\n                  </tr>\n                ) : null\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    );\n  }\n}\n\n\nBusRoute.propTypes = {\n  busRoute: PropTypes.object.isRequired,\n  getBusRoutes: PropTypes.func.isRequired,\n  deleteBusRoute: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({ busRoute: state.busRoute });\n\nexport default connect(mapStateToProps, { getBusRoutes, deleteBusRoute })(BusRoute);\n","import Axios from \"axios\";\nimport { GET_ERRORS, GET_STOPPAGES, GET_STOPPAGE, DELETE_STOPPAGE } from \"./types\";\n\n\nexport const addStoppage = (stoppage, reqType, history) => async dispatch => {\n  try {\n    await Axios.post(`/api/stoppage/${reqType}`, stoppage\n    );\n    history.push(\"/stoppage\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\n\nexport const getAllStoppages = () => async dispatch => {\n  const res = await Axios.get(`/api/stoppage/GLOBAL/getAll`);\n  dispatch({\n    type: GET_STOPPAGES,\n    payload: res.data\n  });\n};\n\n\nexport const getStoppageById = (stoppageId, history) => async dispatch => {\n  try {\n    const res = await Axios.get(`/api/stoppage/GLOBAL/get/${stoppageId}`);\n    dispatch({\n      type: GET_STOPPAGE,\n      payload: res.data\n    });\n\n  } catch (err) {\n    history.push(\"/stoppage\");\n  }\n};\n\n\nexport const deleteStoppage = (stoppageId, history) => async dispatch => {\n  if (\n    window.confirm(\"Are you sure?\")\n  ) {\n    try {\n      await Axios.delete(`/api/stoppage/delete/${stoppageId}`);\n      dispatch({\n        type: DELETE_STOPPAGE,\n        payload: stoppageId\n      });\n    } catch (err) {\n      history.push(\"/schedule\");\n    }\n  }\n};","import React, { Component } from 'react'\nimport {\n  Container,\n  Form,\n  Row,\n  Col,\n  Button,\n  ButtonGroup\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addBusRoute } from '../../actions/BusRouteActions';\nimport { getAllStoppages } from '../../actions/StoppageActions';\n\nclass AddBusRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      routeId: \"\",\n      route: \"\",\n      routeDetail: [],\n      stoppageSequence: [],\n      seletedStoppage: -1,\n      errors: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.addStoppageInRoute = this.addStoppageInRoute.bind(this);\n    this.deleteStoppageFromRoute = this.deleteStoppageFromRoute.bind(this);\n    this.submitFormHandler = this.submitFormHandler.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllStoppages();\n  };\n\n  onChangeHandler = event => {\n    this.setState({ seletedStoppage: event.target.value });\n  };\n\n  addStoppageInRoute = (event, stoppages) => {\n    event.preventDefault();\n    let tmpStoppageSequence = this.state.stoppageSequence;\n    stoppages.forEach(stoppage => {\n      if (stoppage.stoppageId === parseInt(this.state.seletedStoppage)) {\n        tmpStoppageSequence.push(stoppage);\n      }\n    });\n    this.setState({\n      stoppageSequence: tmpStoppageSequence\n    });\n  }\n\n  deleteStoppageFromRoute = (event, idx) => {\n    event.preventDefault();\n    let tmpStoppageSequence = [];\n    let sz = this.state.stoppageSequence.length;\n    for (let i = 0; i < sz; i++) {\n      if (i !== idx) {\n        tmpStoppageSequence.push(\n          this.state.stoppageSequence[i]\n        );\n      }\n    }\n    this.setState({\n      stoppageSequence: tmpStoppageSequence\n    });\n  };\n\n  submitFormHandler = event => {\n    event.preventDefault();\n    let tmpRoute = \"\";\n    let sz = this.state.stoppageSequence.length;\n    for (let i = 0; i < sz; i++) {\n      tmpRoute += this.state.stoppageSequence[i].stoppageId;\n      if (i !== sz - 1) {\n        tmpRoute += \",\";\n      }\n    }\n    const newBusRoute = {\n      routeId: this.state.routeId,\n      route: tmpRoute\n    };\n    this.props.addBusRoute(newBusRoute, this.props.history);\n  };\n\n  render() {\n    const { stoppage } = this.props;\n\n    return (\n      <Container style={{ padding: \"5px\" }}>\n        <Form onSubmit={this.submitFormHandler}>\n          <Row style={{ padding: \"5px\" }}>\n            <strong>{\"Add New Route\"}</strong>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            {this.state.stoppageSequence.map((stoppage, idx) => (\n              <ButtonGroup\n                size=\"sm\"\n                key={idx}\n                style={{ padding: \"5px\" }}\n              >\n                <Button\n                  size=\"sm\"\n                  variant=\"outline-dark\"\n                  disabled\n                >\n                  <strong>{stoppage.stoppageName}</strong>\n                </Button>\n                <Button\n                  size=\"sm\"\n                  variant=\"outline-danger\"\n                  onClick={event => this.deleteStoppageFromRoute(event, idx)}\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </Button>\n              </ButtonGroup>\n            ))}\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={7}></Col>\n            <Col md={3}>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  style={{ fontSize: \"12px\" }}\n                  onChange={this.onChangeHandler}\n                >\n                  <option\n                    style={{ fontSize: \"12px\" }}\n                    value={-1}\n                  >\n                    {\"Select Stoppage\"}\n                  </option>\n                  {stoppage.stoppages.map((stoppage, idx) => (\n                    <option\n                      key={idx + 1}\n                      value={stoppage.stoppageId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {stoppage.stoppageName}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col md={2}>\n              <Button\n                size=\"sm\"\n                variant=\"outline-success\"\n                onClick={(event) => this.addStoppageInRoute(event, stoppage.stoppages)}\n              >\n                Add Stoppage\n              </Button>\n            </Col>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Button\n              type=\"submit\"\n              size=\"sm\"\n              variant=\"primary\"\n            >\n              Submit\n            </Button>\n          </Row>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nAddBusRoute.propTypes = {\n  errors: PropTypes.object.isRequired,\n  addBusRoute: PropTypes.func.isRequired,\n  getAllStoppages: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  stoppage: state.stoppage\n});\n\nexport default connect(\n  mapStateToProps, { addBusRoute, getAllStoppages }\n)(AddBusRoute);","import React, { Component } from 'react'\nimport {\n  Container,\n  Form,\n  Row,\n  ButtonGroup,\n  Button,\n  Col\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getAllStoppages } from '../../actions/StoppageActions';\nimport { getBusRoute, addBusRoute } from '../../actions/BusRouteActions';\n\nclass UpdateBusRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      routeId: \"\",\n      route: \"\",\n      routeDetail: [],\n      stoppageSequence: [],\n      seletedStoppage: -1,\n      errors: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.addStoppageInRoute = this.addStoppageInRoute.bind(this);\n    this.deleteStoppageFromRoute = this.deleteStoppageFromRoute.bind(this);\n    this.submitFormHandler = this.submitFormHandler.bind(this);\n  }\n\n  componentDidMount = () => {\n    const { routeId } = this.props.match.params;\n    this.props.getBusRoute(routeId, this.props.history);\n    this.props.getAllStoppages();\n  };\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      routeId,\n      route,\n      routeDetail\n    } = nextProps.busRoute;\n\n    this.setState({\n      routeId,\n      route,\n      routeDetail,\n      stoppageSequence: routeDetail\n    });\n  };\n\n  onChangeHandler = event => {\n    this.setState({ seletedStoppage: event.target.value });\n  };\n\n  addStoppageInRoute = (event, stoppages) => {\n    event.preventDefault();\n    let tmpStoppageSequence = this.state.stoppageSequence;\n    stoppages.forEach(stoppage => {\n      if (stoppage.stoppageId === parseInt(this.state.seletedStoppage)) {\n        tmpStoppageSequence.push(stoppage);\n      }\n    });\n    this.setState({\n      stoppageSequence: tmpStoppageSequence\n    });\n  }\n\n  deleteStoppageFromRoute = (event, idx) => {\n    event.preventDefault();\n    let tmpStoppageSequence = [];\n    let sz = this.state.stoppageSequence.length;\n    for (let i = 0; i < sz; i++) {\n      if (i !== idx) {\n        tmpStoppageSequence.push(\n          this.state.stoppageSequence[i]\n        );\n      }\n    }\n    this.setState({\n      stoppageSequence: tmpStoppageSequence\n    });\n  };\n\n  submitFormHandler = event => {\n    event.preventDefault();\n    let tmpRoute = \"\";\n    let sz = this.state.stoppageSequence.length;\n    for (let i = 0; i < sz; i++) {\n      tmpRoute += this.state.stoppageSequence[i].stoppageId;\n      if (i !== sz - 1) {\n        tmpRoute += \",\";\n      }\n    }\n    const newBusRoute = {\n      routeId: this.state.routeId,\n      route: tmpRoute\n    };\n    this.props.addBusRoute(newBusRoute, this.props.history);\n  };\n\n\n  render() {\n    const { stoppage } = this.props;\n\n    return (\n      <Container style={{ padding: \"5px\" }}>\n        <Form onSubmit={this.submitFormHandler}>\n          <Row style={{ padding: \"5px\" }}>\n            <strong>{\"Edit Route\"}</strong>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            {this.state.stoppageSequence && this.state.stoppageSequence.map((stoppage, idx) => (\n              <ButtonGroup\n                size=\"sm\"\n                key={idx}\n                style={{ padding: \"5px\" }}\n              >\n                <Button\n                  size=\"sm\"\n                  variant=\"outline-dark\"\n                  disabled\n                >\n                  <strong>{stoppage.stoppageName}</strong>\n                </Button>\n                <Button\n                  size=\"sm\"\n                  variant=\"outline-danger\"\n                  onClick={event => this.deleteStoppageFromRoute(event, idx)}\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </Button>\n              </ButtonGroup>\n            ))}\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={7}></Col>\n            <Col md={3}>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  style={{ fontSize: \"12px\" }}\n                  onChange={this.onChangeHandler}\n                >\n                  <option\n                    style={{ fontSize: \"12px\" }}\n                    value={-1}\n                  >\n                    {\"Select Stoppage\"}\n                  </option>\n                  {stoppage.stoppages.map((stoppage, idx) => (\n                    <option\n                      key={idx + 1}\n                      value={stoppage.stoppageId}\n                      style={{ fontSize: \"12px\" }}\n                    >\n                      {stoppage.stoppageName}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col md={2}>\n              <Button\n                size=\"sm\"\n                variant=\"outline-success\"\n                onClick={(event) => this.addStoppageInRoute(event, stoppage.stoppages)}\n              >\n                Add Stoppage\n              </Button>\n            </Col>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Button\n              type=\"submit\"\n              size=\"sm\"\n              variant=\"primary\"\n            >\n              Submit\n            </Button>\n          </Row>\n        </Form>\n      </Container>\n    )\n  }\n}\n\n\nUpdateBusRoute.propTypes = {\n  errors: PropTypes.object.isRequired,\n  busRoute: PropTypes.object.isRequired,\n  addBusRoute: PropTypes.func.isRequired,\n  getBusRoute: PropTypes.func.isRequired,\n  getAllStoppages: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  stoppage: state.stoppage,\n  busRoute: state.busRoute.route\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addBusRoute,\n    getBusRoute,\n    getAllStoppages\n  }\n)(UpdateBusRoute);","import React, { Component } from 'react'\nimport { Button, Col, ButtonGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass StoppageTopMenubar extends Component {\n  goToPageNo = (event, pageNo) => {\n    window.location.replace(`/stoppage/page/${pageNo}`);\n  };\n\n  render() {\n    const maxButtons = 5;\n    const buttons = [];\n\n    if (this.props.data.pageNo > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageNo - 1}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageNo - 1)}\n        >\n          {this.props.data.pageNo - 1}\n        </Button>\n      );\n    }\n\n    buttons.push(\n      <Button\n        key={this.props.data.pageNo}\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={event => this.goToPageNo(event, this.props.data.pageNo)}\n      >\n        {this.props.data.pageNo}\n      </Button>\n    );\n\n    for (\n      let i = this.props.data.pageNo + 1;\n      i <= Math.min(\n        this.props.data.pageCount - 1,\n        this.props.data.pageNo + maxButtons\n      );\n      i++\n    ) {\n      buttons.push(\n        <Button\n          key={i}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, i)}\n        >\n          {i}\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > maxButtons) {\n      buttons.push(\n        <Button\n          key={0}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          disabled\n        >\n          <strong>......</strong>\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageCount}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageCount)}\n        >\n          {this.props.data.pageCount}\n        </Button>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <Col md={3} style={{ padding: \"5px\", paddingLeft: \"15px\" }}>\n          <Link to={\"/stoppage/add\"}>\n            <Button size=\"sm\" variant=\"outline-primary\">\n              Add Stoppage\n            </Button>\n          </Link>\n        </Col>\n        <Col md={9} style={{ padding: \"5px\", paddingRight: \"15px\" }}>\n          <ButtonGroup size=\"sm\" style={{ float: \"right\" }}>\n            {buttons}\n          </ButtonGroup>\n        </Col>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default StoppageTopMenubar;","import React, { Component } from 'react'\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport StoppageTopMenubar from './StoppageTopMenubar';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { connect } from \"react-redux\";\nimport { getAllStoppages, deleteStoppage } from \"../../actions/StoppageActions\";\nimport PropTypes from \"prop-types\";\n\nclass Stoppage extends Component {\n  constructor() {\n    super();\n    let tmpPageNo = 1;\n    const pathNameComponents = window.location.pathname.split(\"/\");\n    if (pathNameComponents.length === 4) {\n      tmpPageNo = parseInt(pathNameComponents[3]);\n    }\n    this.state = {\n      pageNo: tmpPageNo\n    };\n    this.deletestoppageById = this.deletestoppageById.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllStoppages();\n  };\n\n  deletestoppageById = stoppageId => {\n    this.props.deleteStoppage(stoppageId, this.props.history);\n  };\n\n  render() {\n    const rowsPerPage = 30;\n    const upperBound = this.state.pageNo * rowsPerPage;\n    const lowerBound = (this.state.pageNo - 1) * rowsPerPage + (this.state.pageNo > 1 ? 1 : 0);\n    const { stoppage } = this.props;\n\n    return (\n      <Row>\n        <StoppageTopMenubar\n          data={{\n            pageNo: this.state.pageNo,\n            pageCount: parseInt(stoppage.stoppages.length / rowsPerPage) +\n              (stoppage.stoppages.length % rowsPerPage > 0 ? 1 : 0)\n          }}\n        />\n        <Col md={12} style={{ paddingTop: \"10px\" }}>\n          <Table\n            size=\"sm\"\n            bordered\n            hover\n            striped\n            style={{ textAlign: \"center\" }}\n          >\n            <thead>\n              <tr>\n                <th>SL</th>\n                <th>Name</th>\n                <th>Latitude</th>\n                <th>Longitude</th>\n                <th colSpan={2}>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {stoppage.stoppages.map((stoppage, idx) => (\n                (idx + 1 >= lowerBound && idx + 1 <= upperBound) ? (\n                  <tr key={idx}>\n                    <td>{idx + 1}</td>\n                    <td>{stoppage.stoppageName}</td>\n                    <td>{stoppage.latitude}</td>\n                    <td>{stoppage.longitude}</td>\n                    <td>\n                      <Link to={`/stoppage/edit/${stoppage.stoppageId}`}>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-success\"\n                        >\n                          <FontAwesomeIcon icon={faPen} />\n                        </Button>\n                      </Link>\n                    </td>\n                    <td>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline-danger\"\n                        onClick={() => this.deletestoppageById(stoppage.stoppageId)}\n                      >\n                        <FontAwesomeIcon icon={faTrash} />\n                      </Button>\n                    </td>\n                  </tr>\n                ) : null\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nStoppage.propTypes = {\n  stoppage: PropTypes.object.isRequired,\n  getAllStoppages: PropTypes.func.isRequired,\n  deleteStoppage: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({ stoppage: state.stoppage });\n\nexport default connect(mapStateToProps, {\n  getAllStoppages, deleteStoppage\n})(Stoppage);","import React, { Component } from 'react'\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addStoppage } from \"../../actions/StoppageActions\";\n\nimport classnames from \"classnames\";\n\nclass AddStoppage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stoppageId: \"\",\n      stoppageName: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      errors: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  };\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const newStoppage = {\n      stoppageId: this.state.stoppageId,\n      stoppageName: this.state.stoppageName,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude\n    };\n    this.props.addStoppage(newStoppage, \"add\", this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container style={{ padding: \"5px\" }}>\n        <Form onSubmit={this.onSubmitHandler}>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={12}>\n              <strong>{\"Add New Stoppage\"}</strong>\n            </Col>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={12}>\n              <Form.Group>\n                <Form.Label>Stoppage Name</Form.Label>\n                <input\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.stoppageName }\n                  )}\n                  name=\"stoppageName\"\n                  type=\"text\"\n                  value={this.state.stoppageName}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.stoppageName && (\n                  <div className=\"invalid-feedback\">\n                    {errors.stoppageName}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>Latitude</Form.Label>\n                <input\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.latitude }\n                  )}\n                  name=\"latitude\"\n                  type=\"text\"\n                  value={this.state.latitude}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.latitude && (\n                  <div className=\"invalid-feedback\">\n                    {errors.latitude}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>Longitude</Form.Label>\n                <input\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.longitude }\n                  )}\n                  name=\"longitude\"\n                  type=\"text\"\n                  value={this.state.longitude}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.longitude && (\n                  <div className=\"invalid-feedback\">\n                    {errors.longitude}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={12}>\n              <Button\n                size=\"sm\"\n                type=\"submit\"\n                variant=\"primary\"\n              >\n                Submit\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nAddStoppage.propTypes = {\n  addStoppage: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({ errors: state.errors });\n\nexport default connect(mapStateToProps, { addStoppage })(AddStoppage);","import React, { Component } from 'react'\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getStoppageById, addStoppage } from \"../../actions/StoppageActions\";\nimport classnames from \"classnames\";\n\nclass UpdateStoppage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stoppageId: \"\",\n      stoppageName: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      errors: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  componentDidMount = () => {\n    const { stoppageId } = this.props.match.params;\n    this.props.getStoppageById(stoppageId, this.props.history);\n  };\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      stoppageId,\n      stoppageName,\n      latitude,\n      longitude\n    } = nextProps.stoppage;\n\n    this.setState({\n      stoppageId,\n      stoppageName,\n      latitude,\n      longitude\n    });\n\n  };\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const updateStoppage = {\n      stoppageId: this.state.stoppageId,\n      stoppageName: this.state.stoppageName,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude\n    };\n    this.props.addStoppage(updateStoppage, \"update\", this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container style={{ padding: \"5px\" }}>\n        <Form onSubmit={this.onSubmitHandler}>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={12}>\n              <strong>{\"Edit Stoppage\"}</strong>\n            </Col>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={12}>\n              <Form.Group>\n                <Form.Label>Stoppage Name</Form.Label>\n                <input\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.stoppageName }\n                  )}\n                  name=\"stoppageName\"\n                  type=\"text\"\n                  value={this.state.stoppageName}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.stoppageName && (\n                  <div className=\"invalid-feedback\">\n                    {errors.stoppageName}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>Latitude</Form.Label>\n                <input\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.latitude }\n                  )}\n                  name=\"latitude\"\n                  type=\"text\"\n                  value={this.state.latitude}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.latitude && (\n                  <div className=\"invalid-feedback\">\n                    {errors.latitude}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>Longitude</Form.Label>\n                <input\n                  className={classnames(\n                    \"form-control from-control-lg\",\n                    { \"is-invalid\": errors.longitude }\n                  )}\n                  name=\"longitude\"\n                  type=\"text\"\n                  value={this.state.longitude}\n                  onChange={this.onChangeHandler}\n                />\n                {errors.longitude && (\n                  <div className=\"invalid-feedback\">\n                    {errors.longitude}\n                  </div>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ padding: \"5px\" }}>\n            <Col md={12}>\n              <Button\n                size=\"sm\"\n                type=\"submit\"\n                variant=\"primary\"\n              >\n                Submit\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nUpdateStoppage.propTypes = {\n  errors: PropTypes.object.isRequired,\n  stoppage: PropTypes.object.isRequired,\n  addStoppage: PropTypes.func.isRequired,\n  getStoppageById: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  stoppage: state.stoppage.stoppage\n});\n\nexport default connect(\n  mapStateToProps,\n  { getStoppageById, addStoppage })(UpdateStoppage);","import React, { Component } from 'react'\nimport { Button, Col, ButtonGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass TopBar extends Component {\n  constructor() {\n    super();\n    this.goToPageNo = this.goToPageNo.bind(this);\n  }\n\n  goToPageNo = (event, pageNo) => {\n    window.location.replace(`/${this.props.data.type}/page/${pageNo}`);\n  };\n\n  render() {\n    const maxButtons = 5;\n    const buttons = [];\n\n    if (this.props.data.pageNo > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageNo - 1}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageNo - 1)}\n        >\n          {this.props.data.pageNo - 1}\n        </Button>\n      );\n    }\n\n    buttons.push(\n      <Button\n        key={this.props.data.pageNo}\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={event => this.goToPageNo(event, this.props.data.pageNo)}\n      >\n        {this.props.data.pageNo}\n      </Button>\n    );\n\n    for (\n      let i = this.props.data.pageNo + 1;\n      i <= Math.min(\n        this.props.data.pageCount - 1,\n        this.props.data.pageNo + maxButtons\n      );\n      i++\n    ) {\n      buttons.push(\n        <Button\n          key={i}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, i)}\n        >\n          {i}\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > maxButtons) {\n      buttons.push(\n        <Button\n          key={0}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          disabled\n        >\n          <strong>......</strong>\n        </Button>\n      );\n    }\n    if (this.props.data.pageCount - this.props.data.pageNo + 1 > 1) {\n      buttons.push(\n        <Button\n          key={this.props.data.pageCount}\n          size=\"sm\"\n          variant=\"outline-primary\"\n          onClick={event => this.goToPageNo(event, this.props.data.pageCount)}\n        >\n          {this.props.data.pageCount}\n        </Button>\n      );\n    }\n\n\n    return (\n      <React.Fragment>\n        <Col md={3} style={{ padding: \"5px\", paddingLeft: \"15px\" }}>\n          <Link to={`/${this.props.data.type}/add`}>\n            <Button size=\"sm\" variant=\"outline-primary\">\n              {\"Add \" + this.props.data.type}\n            </Button>\n          </Link>\n        </Col>\n        <Col md={9} style={{ padding: \"5px\", paddingRight: \"15px\" }}>\n          <ButtonGroup size=\"sm\" style={{ float: \"right\" }}>\n            {buttons}\n          </ButtonGroup>\n        </Col>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default TopBar;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllDriversInservice, deleteDriver } from '../../actions/DriverActions';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport TopBar from './TopBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nclass Driver extends Component {\n  constructor() {\n    super();\n    let tmpPageNo = 1;\n    const pathNameComponents = window.location.pathname.split(\"/\");\n    if (pathNameComponents.length === 4) {\n      tmpPageNo = parseInt(pathNameComponents[3]);\n    }\n    this.state = {\n      pageNo: tmpPageNo,\n      type: pathNameComponents[1]\n    };\n    this.deleteDriver = this.deleteDriver.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllDriversInservice();\n  };\n\n  deleteDriver = driverId => {\n    this.props.deleteDriver(driverId, this.props.history);\n  };\n\n  render() {\n    const rowsPerPage = 30;\n    const upperBound = this.state.pageNo * rowsPerPage;\n    const lowerBound = (this.state.pageNo - 1) * rowsPerPage + (this.state.pageNo > 1 ? 1 : 0);\n    const { driver } = this.props;\n\n    return (\n      <Row>\n        <TopBar\n          data={{\n            type: this.state.type,\n            pageNo: this.state.pageNo,\n            pageCount: parseInt(driver.drivers.length / rowsPerPage) +\n              (driver.drivers.length % rowsPerPage > 0 ? 1 : 0)\n          }}\n        />\n        <Col md={12}>\n          <Table\n            size=\"sm\"\n            bordered\n            hover\n            striped\n            style={{ textAlign: \"center\" }}\n          >\n            <thead>\n              <tr>\n                <th>SL</th>\n                <th>Full Name</th>\n                <th>Mobile No</th>\n                <th>Email</th>\n                <th>Rating</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                driver.drivers.map((driver, idx) => (\n                  (idx + 1 >= lowerBound && idx + 1 <= upperBound) && (\n                    <tr key={idx}>\n                      <td>{idx + 1}</td>\n                      <td>{driver.user.firstName + \" \" + driver.user.lastName}</td>\n                      <td>{driver.user.mobileNo}</td>\n                      <td>{driver.user.email}</td>\n                      <td>{driver.rating}</td>\n                      <td>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-danger\"\n                          onClick={() => this.deleteDriver(driver.driverId)}\n                        >\n                          <FontAwesomeIcon icon={faTrash} />\n                        </Button>\n                      </td>\n                    </tr>\n                  )\n                ))\n              }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nDriver.propTypes = {\n  driver: PropTypes.object.isRequired,\n  getAllDriversInservice: PropTypes.func.isRequired,\n  deleteDriver: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({ driver: state.driver });\n\nexport default connect(\n  mapStateToProps,\n  { getAllDriversInservice, deleteDriver }\n)(Driver);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllStuffsInservice, deleteStuff } from '../../actions/StuffActions';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport TopBar from './TopBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nclass Stuff extends Component {\n  constructor() {\n    super();\n    let tmpPageNo = 1;\n    const pathNameComponents = window.location.pathname.split(\"/\");\n    if (pathNameComponents.length === 4) {\n      tmpPageNo = parseInt(pathNameComponents[3]);\n    }\n    this.state = {\n      pageNo: tmpPageNo,\n      type: pathNameComponents[1]\n    };\n    this.deleteStuff = this.deleteStuff.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllStuffsInservice();\n  };\n\n  deleteStuff = stuffId => {\n    this.props.deleteStuff(stuffId, this.props.history);\n  }\n\n  render() {\n    const rowsPerPage = 30;\n    const upperBound = this.state.pageNo * rowsPerPage;\n    const lowerBound = (this.state.pageNo - 1) * rowsPerPage + (this.state.pageNo > 1 ? 1 : 0);\n    const { stuff } = this.props;\n\n    return (\n      <Row>\n        <TopBar\n          data={{\n            type: this.state.type,\n            pageNo: this.state.pageNo,\n            pageCount: parseInt(stuff.stuffs.length / rowsPerPage) +\n              (stuff.stuffs.length % rowsPerPage > 0 ? 1 : 0)\n          }}\n        />\n        <Col md={12}>\n          <Table\n            size=\"sm\"\n            bordered\n            hover\n            striped\n            style={{ textAlign: \"center\" }}\n          >\n            <thead>\n              <tr>\n                <th>SL</th>\n                <th>Full Name</th>\n                <th>Mobile No</th>\n                <th>Email</th>\n                <th>Rating</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                stuff.stuffs.map((stuff, idx) => (\n                  (idx + 1 >= lowerBound && idx + 1 <= upperBound) && (\n                    <tr key={idx}>\n                      <td>{idx + 1}</td>\n                      <td>{stuff.user.firstName + \" \" + stuff.user.lastName}</td>\n                      <td>{stuff.user.mobileNo}</td>\n                      <td>{stuff.user.email}</td>\n                      <td>{stuff.rating}</td>\n                      <td>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-danger\"\n                          onClick={() => this.deleteStuff(stuff.stuffId)}\n                        >\n                          <FontAwesomeIcon icon={faTrash} />\n                        </Button>\n                      </td>\n                    </tr>\n                  )\n                ))\n              }\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nStuff.propTypes = {\n  stuff: PropTypes.object.isRequired,\n  getAllStuffsInservice: PropTypes.func.isRequired,\n  deleteStuff: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({ stuff: state.stuff });\n\nexport default connect(\n  mapStateToProps,\n  { getAllStuffsInservice, deleteStuff }\n)(Stuff);\n","import React, { Component } from 'react'\nimport { Container, Form, Col, Row, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addNewDriverOrStuff } from '../../actions/DriverActions';\nimport classnames from 'classnames';\n\nclass AddDriverOrStuff extends Component {\n  constructor() {\n    super();\n    let pathWords = window.location.pathname.split('/');\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      mobileNo: \"\",\n      type: pathWords[1]\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const newUser = {\n      email: this.state.email,\n      password: this.state.password,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      mobileNo: this.state.mobileNo,\n      isBlocked: false,\n    };\n    this.props.addNewDriverOrStuff(newUser, this.state.type, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.props;\n\n    return (\n      <Container style={{ padding: \"25px\" }}>\n        <Form\n          onSubmit={this.onSubmitHandler}\n          style={{ padding: \"20px\" }}\n        >\n          <Form.Group>\n            <Form.Control\n              className={classnames(\n                \"form-control from-control-lg\",\n                { \"is-invalid\": errors.firstName }\n              )}\n              name=\"firstName\"\n              type=\"text\"\n              value={this.state.firstName}\n              onChange={this.onChangeHandler}\n              placeholder=\"First Name\"\n            />\n            {errors.firstName && (\n              <div className=\"invalid-feedback\">\n                {errors.firstName}\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              className={classnames(\n                \"form-control from-control-lg\",\n                { \"is-invalid\": errors.lastName }\n              )}\n              name=\"lastName\"\n              type=\"text\"\n              value={this.state.lastName}\n              onChange={this.onChangeHandler}\n              placeholder=\"Last Name\"\n            />\n            {errors.lastName && (\n              <div className=\"invalid-feedback\">\n                {errors.lastName}\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              className={classnames(\n                \"form-control from-control-lg\",\n                { \"is-invalid\": errors.email }\n              )}\n              name=\"email\"\n              type=\"email\"\n              value={this.state.email}\n              onChange={this.onChangeHandler}\n              placeholder=\"@Email\"\n            />\n            {errors.email && (\n              <div className=\"invalid-feedback\">\n                {errors.email}\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              className={classnames(\n                \"form-control from-control-lg\",\n                { \"is-invalid\": errors.password }\n              )}\n              name=\"password\"\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.onChangeHandler}\n              placeholder=\"Initial Password\"\n            />\n            {errors.password && (\n              <div className=\"invalid-feedback\">\n                {errors.password}\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              className={classnames(\n                \"form-control from-control-lg\",\n                { \"is-invalid\": errors.mobileNo }\n              )}\n              name=\"mobileNo\"\n              type=\"text\"\n              value={this.state.mobileNo}\n              onChange={this.onChangeHandler}\n              placeholder=\"Mobile no\"\n            />\n            {errors.mobileNo && (\n              <div className=\"invalid-feedback\">\n                {errors.mobileNo}\n              </div>\n            )}\n          </Form.Group>\n          <Row>\n            <Col md={6}>\n              <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Col>\n            <Col md={6}>\n              <Button\n                variant=\"secondary\"\n                type=\"reset\"\n                style={{ float: \"right\" }}\n              >Reset</Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nAddDriverOrStuff.propTypes = {\n  errors: PropTypes.object.isRequired,\n  addNewDriverOrStuff: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({ errors: state.errors });\n\nexport default connect(\n  mapStateToProps, {\n  addNewDriverOrStuff\n})(AddDriverOrStuff);","import React, { Component } from 'react'\nimport { Card, Container, Button } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Announcement extends Component {\n  render() {\n    return (\n      <Container style={{ paddingBottom: '10px' }}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              {'Date: ' + (new Date(this.props.data.date)).toLocaleDateString()}\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            {this.props.data.announcement.split('\\n').map((paragraph, i) => (\n              <Card.Text key={i}>\n                {paragraph}\n              </Card.Text>\n            ))}\n          </Card.Body>\n          <Card.Footer>\n            <div className='col-md-1' style={{ float: 'right' }}>\n              <Button\n                size='sm'\n                variant='outline-danger'\n                onClick={() => this.props.delete(this.props.data.announcementId)}\n              >\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n            </div>\n          </Card.Footer>\n        </Card>\n      </Container>\n    )\n  }\n}\n\nexport default Announcement;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAll, deleteAnnouncement } from '../../actions/AnnouncementActions';\nimport { Container, Jumbotron, Button } from 'react-bootstrap';\nimport Announcement from './Announcement';\nimport { Link } from 'react-router-dom';\n\nclass Notice extends Component {\n  constructor() {\n    super();\n    this.delete = this.delete.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAll();\n  };\n\n  delete = announcementId => {\n    this.props.deleteAnnouncement(announcementId, this.props.history);\n  };\n\n  render() {\n    const { announcement } = this.props;\n\n    return (\n      <Container style={{ padding: \"10px\" }}>\n        <div className='col-md-2' style={{ padding: '10px' }}>\n          <Link to={'/notice/add'}>\n            <Button\n              size='sm'\n              variant='primary'\n            >Add Notice</Button>\n          </Link>\n        </div>\n        <Jumbotron style={{ height: \"1250px\", overflow: \"auto\" }}>\n          {announcement.announcements.map((announcement, idx) => (\n            <Announcement\n              key={idx}\n              data={announcement}\n              delete={this.delete}\n            />\n          ))}\n        </Jumbotron>\n      </Container>\n    )\n  }\n}\n\nNotice.propType = {\n  getAll: PropTypes.func.isRequired,\n  deleteAnnouncement: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  announcement: state.announcement\n});\n\nexport default connect(\n  mapStateToProps,\n  { getAll, deleteAnnouncement }\n)(Notice);","import Axios from 'axios';\nimport { GET_ANNOUNCEMENTS, GET_ERRORS, DELETE_ANNOUNCEMENT } from './types';\n\nexport const create = (announcement, history) => async dispatch => {\n  try {\n    await Axios.post('/api/announcement/add', announcement);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n    history.push('/notice');\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getAll = () => async dispatch => {\n  const res = await Axios.get('/api/announcement/GLOBAL/all');\n  let announcements = res.data;\n  announcements.sort(function (a, b) { return new Date(b.date) - new Date(a.date) });\n  dispatch({\n    type: GET_ANNOUNCEMENTS,\n    payload: announcements\n  });\n};\n\nexport const deleteAnnouncement = (announcementId, history) => async dispatch => {\n  if (\n    window.confirm('Are you sure?')\n  ) {\n    try {\n      await Axios.delete(`/api/announcement/${announcementId}`);\n      dispatch({\n        type: DELETE_ANNOUNCEMENT,\n        payload: announcementId\n      });\n    } catch (err) {\n      history.push('/notice');\n    }\n  }\n};","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { create } from '../../actions/AnnouncementActions';\nimport { Container, Jumbotron, Form, Button } from 'react-bootstrap';\nimport classnames from 'classnames';\n\nclass AddAnnouncement extends Component {\n  constructor() {\n    super();\n    this.state = {\n      date: '',\n      announcement: '',\n      errors: {}\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  componentWillReceiveProps = nexprops => {\n    if (nexprops.errors) {\n      this.setState({ errors: nexprops.errors });\n    }\n  };\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const newAnnouncement = {\n      date: this.state.date,\n      announcement: this.state.announcement\n    };\n    this.props.create(newAnnouncement, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.props\n\n    return (\n      <Container style={{ padding: '10px' }}>\n        <Jumbotron>\n          <Form onSubmit={this.onSubmitHandler}>\n            <Form.Group className='col-md-4'>\n              <Form.Label>Date</Form.Label>\n              <Form.Control\n                className={classnames(\n                  'form-control from-control-lg',\n                  { 'is-invalid': errors.date }\n                )}\n                name='date'\n                type='date'\n                value={this.state.date}\n                onChange={this.onChangeHandler}\n              />\n              {errors.date && (\n                <div className='invalid-feedback'>\n                  {errors.date}\n                </div>\n              )}\n            </Form.Group>\n\n            <Form.Group className='col-md-12'>\n              <Form.Label>Announcement</Form.Label>\n              <textarea\n                className={classnames(\n                  'form-control from-control-lg',\n                  { 'is-invalid': errors.announcement }\n                )}\n                name='announcement'\n                type='textArea'\n                value={this.state.announcement}\n                onChange={this.onChangeHandler}\n                style={{ height: '200px', fontSize: '12px' }}\n              ></textarea>\n              {errors.announcement && (\n                <div className='invalid-feedback'>\n                  {errors.announcement}\n                </div>\n              )}\n            </Form.Group>\n            <Form.Group className='col-md-2'>\n              <Button\n                size='sm'\n                variant='primary'\n                type='submit'\n              >Submit</Button>\n            </Form.Group>\n          </Form>\n        </Jumbotron>\n      </Container>\n    )\n  }\n}\n\nAddAnnouncement.propType = {\n  create: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { create }\n)(AddAnnouncement);","import React, { Component } from 'react'\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap';\n\nclass ReplyFeedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      notification: ''\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    this.props.sendFeedbackReply(this.state.notification, this.props.user);\n    this.props.onHideHandler(event);\n  };\n\n  render() {\n    return (\n      <Modal\n        size='lg'\n        centered\n        show={this.props.show}\n        onHide={this.props.onHideHandler}\n\n      >\n        <Form onSubmit={this.onSubmitHandler}>\n          <Modal.Header closeButton>\n            <Modal.Title>Reply Feedback</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row style={{ padding: '5px' }}>\n              <Col md={9}>\n                <Form.Text>\n                  <strong>{'To: '}</strong>{\n                    this.props.user.email\n                  }\n                </Form.Text>\n              </Col>\n              <Col md={3}>\n                <Form.Text>\n                  <strong>{'Date: '}</strong>\n                  {(new Date(this.props.date).toDateString())}\n                </Form.Text>\n              </Col>\n            </Row>\n            <Form.Group>\n              <textarea\n                className='form-control from-control-lg'\n                name='notification'\n                style={{ height: '150px', fontSize: '12px' }}\n                value={this.state.notification}\n                onChange={this.onChangeHandler}\n                required\n              >\n              </textarea>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              size='sm'\n              variant='primary'\n              type='submit'\n            >Send</Button>\n\n            <Button\n              size='sm'\n              variant='danger'\n              onClick={this.props.onHideHandler}\n            >Close</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    )\n  }\n}\n\nexport default ReplyFeedback;\n","import React, { Component } from 'react'\nimport { Container, Card, Row, Col, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faReply } from \"@fortawesome/free-solid-svg-icons\";\nimport ReplyFeedback from './ReplyFeedback';\n\nclass FeedbackItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false\n    };\n    this.openFeedbackReplyForm = this.openFeedbackReplyForm.bind(this);\n    this.onHideHandler = this.onHideHandler.bind(this);\n  }\n\n  openFeedbackReplyForm = event => {\n    this.setState({ show: true });\n  };\n\n  onHideHandler = event => {\n    this.setState({ show: false });\n  };\n\n  render() {\n    return (\n      <Container style={{ paddingBottom: '10px' }}>\n        <Card border='warning'>\n          <Card.Header>\n            <Row>\n              <Col md={9}>\n                <Card.Subtitle style={{ marginBottom: '5px' }}>\n                  {'User Name: ' + this.props.data.user.firstName + ' ' + this.props.data.user.lastName}\n                </Card.Subtitle>\n                <Card.Text>\n                  {'User Email: ' + this.props.data.user.email}\n                </Card.Text>\n              </Col>\n              <Col md={3}>\n                <Card.Subtitle>{'Date: ' + new Date(this.props.data.date).toDateString()}</Card.Subtitle>\n              </Col>\n            </Row>\n          </Card.Header>\n          <Card.Body>\n            {this.props.data.description.split('\\n').map((para, idx) => (\n              <Card.Text key={idx}>{para}</Card.Text>\n            ))}\n          </Card.Body>\n          <Card.Footer>\n            <div className='col-md-1' style={{ float: 'right' }}>\n              <Button\n                size='sm'\n                variant='outline-danger'\n                onClick={() => this.props.deleteFeedback(this.props.data.feedbackId)}\n              >\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n            </div>\n            <div className='col-md-1' style={{ float: 'right' }}>\n              <Button\n                size='sm'\n                variant='outline-info'\n                onClick={this.openFeedbackReplyForm}\n              >\n                <FontAwesomeIcon icon={faReply} />\n              </Button>\n              <ReplyFeedback\n                show={this.state.show}\n                user={this.props.data.user}\n                date={this.props.data.date}\n                onHideHandler={this.onHideHandler}\n                sendFeedbackReply={this.props.sendFeedbackReply}\n              />\n            </div>\n          </Card.Footer>\n        </Card>\n      </Container>\n    )\n  }\n}\n\nexport default FeedbackItem;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllFeedbacks, deleteFeedback, replyFeedback } from '../../actions/FeedbackActions';\nimport { Container, Jumbotron } from 'react-bootstrap';\nimport FeedbackItem from './FeedbackItem';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.deleteFeedback = this.deleteFeedback.bind(this);\n    this.sendFeedbackReply = this.sendFeedbackReply.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.props.getAllFeedbacks();\n  };\n\n  deleteFeedback = feedbackId => {\n    this.props.deleteFeedback(feedbackId, this.props.history);\n  };\n\n  sendFeedbackReply = (replyMessage, user) => {\n    const newNotification = {\n      date: (new Date()).toISOString(),\n      notification: replyMessage,\n      user: user\n    };\n    this.props.replyFeedback(newNotification);\n  };\n\n  render() {\n    const { feedback } = this.props;\n\n    return (\n      <Container style={{ padding: \"10px\" }}>\n        <Jumbotron style={{ height: \"1250px\", overflow: \"auto\" }}>\n          {feedback.feedbacks.map((feedback, idx) => (\n            <FeedbackItem\n              key={idx}\n              data={feedback}\n              deleteFeedback={this.deleteFeedback}\n              sendFeedbackReply={this.sendFeedbackReply}\n            />\n          ))}\n        </Jumbotron>\n      </Container>\n    )\n  }\n}\n\nFeedback.propType = {\n  feedback: PropTypes.func.isRequired,\n  getAllFeedbacks: PropTypes.func.isRequired,\n  deleteFeedback: PropTypes.func.isRequired,\n  replyFeedback: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  feedback: state.feedback\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getAllFeedbacks,\n    deleteFeedback,\n    replyFeedback\n  }\n)(Feedback);","import Axios from 'axios';\nimport { GET_FEEDBACKS, DELETE_FEEDBACK, GET_ERRORS } from './types';\n\nexport const getAllFeedbacks = () => async dispatch => {\n  let feedbacks = (await Axios.get('/api/feedback/all')).data;\n  dispatch({\n    type: GET_FEEDBACKS,\n    payload: feedbacks.sort(function (a, b) { return new Date(b.date) - new Date(a.date) })\n  });\n};\n\nexport const deleteFeedback = (feedbackId, history) => async dispatch => {\n  if (\n    window.confirm('Are you sure?')\n  ) {\n    try {\n      await Axios.delete(`/api/feedback/${feedbackId}`);\n      dispatch({\n        type: DELETE_FEEDBACK,\n        payload: feedbackId\n      });\n    } catch (err) {\n      history.push('/feedback');\n    }\n  }\n};\n\nexport const replyFeedback = (notification) => async dispatch => {\n  try {\n    await Axios.post('/api/notification/add', notification);\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};","import React, { Component } from 'react'\nimport { Form, Row, Col, Button, Jumbotron, Container } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/SecurityActions';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    }\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n  }\n\n  componentDidMount = () => {\n    if (this.props.security.isValidToken) {\n      this.props.history.push(\"/schedule\");\n    }\n  };\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.security.isValidToken) {\n      window.location.href = \"/schedule\";\n    }\n  };\n\n  onChangeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    }\n    this.props.login(loginRequest);\n  };\n\n  render() {\n    const { errors } = this.props;\n\n    return (\n      <Row style={{ padding: \"10px\", paddingTop: \"100px\" }}>\n        <Col md={3}></Col>\n        <Col md={6}>\n          <Jumbotron>\n            <Container style={{ padding: \"10px\", paddingLeft: \"220px\" }}>\n              <img src=\"/diuIcon.png\" height=\"120px\" alt=\"login logo\" />\n            </Container>\n            <Form onSubmit={this.onSubmitHandler}>\n              <Form.Group as={Row}>\n                <Form.Label column sm={2}>Email</Form.Label>\n                <Col sm={10}>\n                  <Form.Control\n                    className={classnames(\n                      \"form-control from-control-lg\",\n                      { \"is-invalid\": errors.username }\n                    )}\n                    name=\"username\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={this.state.username}\n                    onChange={this.onChangeHandler}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">\n                      {errors.username}\n                    </div>\n                  )}\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row}>\n                <Form.Label column sm={2}>Password</Form.Label>\n                <Col sm={10}>\n                  <Form.Control\n                    className={classnames(\n                      \"form-control from-control-lg\",\n                      { \"is-invalid\": errors.password }\n                    )}\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={this.onChangeHandler}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.password}\n                    </div>\n                  )}\n                </Col>\n              </Form.Group>\n\n              <Row>\n                <Col md={5}></Col>\n                <Form.Group className=\"col-md-7\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"primary\"\n                    type=\"submit\"\n                  >Login</Button>\n                </Form.Group>\n              </Row>\n            </Form>\n          </Jumbotron>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nLogin.propTypes = {\n  security: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}","import { GET_STOPPAGES, GET_STOPPAGE, DELETE_STOPPAGE } from \"../actions/types\";\n\nconst initialState = {\n  stoppages: [],\n  stoppage: {}\n};\n\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_STOPPAGES:\n      return {\n        ...state,\n        stoppages: action.payload\n      };\n\n    case GET_STOPPAGE:\n      return {\n        ...state,\n        stoppage: action.payload\n      }\n\n    case DELETE_STOPPAGE:\n      return {\n        ...state,\n        stoppages: state.stoppages.filter(\n          stoppage => stoppage.stoppageId !== action.payload\n        )\n      }\n\n    default:\n      return state;\n  }\n}","import {\n  GET_BUSES,\n  GET_BUS,\n  DELETE_BUS,\n  GET_AVAILABLE_BUSES,\n  MARK_BUSREPORT_AS_SOLVED,\n  DELETE_BUSREPORT,\n  GET_BUS_REQUISITIONS,\n  GET_BUS_REQUISITION,\n  DELETE_BUS_REQUISITION\n} from \"../actions/types\";\n\nconst initialState = {\n  buses: [],\n  availableBuses: [],\n  bus: {},\n  busRequsitions: [],\n  busRequsition: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BUSES:\n      return {\n        ...state,\n        buses: action.payload\n      }\n\n    case GET_BUS:\n      return {\n        ...state,\n        bus: action.payload\n      }\n\n    case DELETE_BUS:\n      return {\n        ...state,\n        buses: state.buses.filter(\n          bus => bus.busId !== action.payload\n        )\n      }\n\n    case GET_AVAILABLE_BUSES:\n      return {\n        ...state,\n        availableBuses: action.payload\n      }\n\n    case MARK_BUSREPORT_AS_SOLVED:\n      return {\n        ...state,\n        buses: state.buses.map(\n          bus => {\n            if (bus.busId === action.payload.busId) {\n              bus.busReports = bus.busReports.filter(\n                busReport => busReport.busReportId !== action.payload.busReportId\n              );\n            }\n            return bus;\n          }\n        )\n      }\n\n    case DELETE_BUSREPORT:\n      return {\n        ...state,\n        buses: state.buses.map(\n          bus => {\n            if (bus.busId === action.payload.busId) {\n              bus.busReports = bus.busReports.filter(\n                busReport => busReport.busReportId !== action.payload.busReportId\n              );\n            }\n            return bus;\n          }\n        )\n      }\n\n    case GET_BUS_REQUISITIONS:\n      return {\n        ...state,\n        busRequsitions: action.payload\n      }\n\n    case GET_BUS_REQUISITION:\n      return {\n        ...state,\n        busRequsition: action.payload\n      }\n\n    case DELETE_BUS_REQUISITION:\n      return {\n        ...state,\n        busRequsitions: state.busRequsitions.filter(\n          busRequsition => busRequsition.requisitionId !== action.payload\n        )\n      }\n\n    default:\n      return state;\n  }\n}","import { GET_SCHEDULES, GET_SCHEDULE, DELETE_SCHEDULE } from \"../actions/types\";\n\nconst initialSate = {\n  schedules: [],\n  schedule: {}\n};\n\nexport default function (state = initialSate, action) {\n  switch (action.type) {\n    case GET_SCHEDULES:\n      return {\n        ...state,\n        schedules: action.payload\n      }\n\n    case GET_SCHEDULE:\n      return {\n        ...state,\n        schedule: action.payload\n      }\n\n    case DELETE_SCHEDULE:\n      return {\n        ...state,\n        schedules: state.schedules.filter(\n          schedule => schedule.scheduleId !== action.payload\n        )\n      }\n\n    default:\n      return state;\n  }\n}","import { GET_BUSROUTES, GET_BUSROUTE, DELETE_BUSROUTE } from \"../actions/types\";\n\nconst initailState = {\n  routes: [],\n  route: {}\n};\n\nexport default function (state = initailState, action) {\n  switch (action.type) {\n    case GET_BUSROUTES:\n      return {\n        ...state,\n        routes: action.payload\n      }\n\n    case GET_BUSROUTE:\n      return {\n        ...state,\n        route: action.payload\n      }\n\n    case DELETE_BUSROUTE:\n      return {\n        ...state,\n        routes: state.routes.filter(\n          route => route.routeId !== action.payload\n        )\n      }\n\n    default:\n      return state;\n  }\n}","import { GET_DRIVERS_INSERVICE, DELETE_DRIVER } from '../actions/types';\n\nconst initialState = {\n  drivers: [],\n  driver: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_DRIVERS_INSERVICE:\n      return {\n        ...state,\n        drivers: action.payload\n      }\n\n    case DELETE_DRIVER:\n      return {\n        ...state,\n        drivers: state.drivers.filter(\n          driver => driver.driverId !== action.payload\n        )\n      }\n\n    default:\n      return state;\n  }\n}","import { GET_STUFFS_INSERVICE, DELETE_STUFF } from '../actions/types';\n\nconst initialState = {\n  stuffs: [],\n  stuff: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_STUFFS_INSERVICE:\n      return {\n        ...state,\n        stuffs: action.payload\n      }\n\n    case DELETE_STUFF:\n      return {\n        ...state,\n        stuffs: state.stuffs.filter(\n          stuff => stuff.stuffId !== action.payload\n        )\n      }\n\n    default:\n      return state;\n  }\n}\n","import { GET_ANNOUNCEMENTS, DELETE_ANNOUNCEMENT } from '../actions/types';\n\nconst initialState = {\n  announcements: []\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ANNOUNCEMENTS:\n      return {\n        ...state,\n        announcements: action.payload\n      }\n\n    case DELETE_ANNOUNCEMENT:\n      return {\n        ...state,\n        announcements: state.announcements.filter(\n          announcement => announcement.announcementId !== action.payload\n        )\n      }\n\n    default:\n      return state;\n  }\n}","import { GET_FEEDBACKS, DELETE_FEEDBACK } from '../actions/types';\n\nconst initialState = {\n  feedbacks: []\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_FEEDBACKS:\n      return {\n        ...state,\n        feedbacks: action.payload\n      }\n\n    case DELETE_FEEDBACK:\n      return {\n        ...state,\n        feedbacks: state.feedbacks.filter(\n          feedback => feedback.feedbackId !== action.payload\n        )\n      }\n\n    default:\n      return state;\n  }\n}","import { GET_USERS } from '../actions/types';\n\nconst initialState = {\n  users: []\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload\n      }\n\n    default:\n      return state;\n  }\n}","import { SET_CURRENT_USER } from '../actions/types';\n\nconst initialSate = {\n  user: {},\n  isValidToken: false\n};\n\nexport default function (state = initialSate, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isValidToken: action.payload ? true : false,\n        user: action.payload\n      }\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport ErrorReducer from \"./ErrorReducer\";\nimport StoppageReducer from \"./StoppageReducer\";\nimport BusReducer from \"./BusReducer\";\nimport ScheduleReducer from \"./ScheduleReducer\";\nimport BusRouteReducer from \"./BusRouteReducer\";\nimport DriverReducer from \"./DriverReducer\";\nimport StuffReducer from \"./StuffReducer\";\nimport AnnouncementReducer from \"./AnnouncementReducer\";\nimport FeedbackReducer from \"./FeedbackReducer\";\nimport UserReducer from \"./UserReducer\";\nimport SecurityReducer from \"./SecurityReducer\";\n\nexport default combineReducers({\n  errors: ErrorReducer,\n  stoppage: StoppageReducer,\n  bus: BusReducer,\n  busRoute: BusRouteReducer,\n  schedule: ScheduleReducer,\n  driver: DriverReducer,\n  stuff: StuffReducer,\n  announcement: AnnouncementReducer,\n  feedback: FeedbackReducer,\n  user: UserReducer,\n  security: SecurityReducer\n});","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initailState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (0 && window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initailState,\n    composeWithDevTools(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initailState,\n    composeWithDevTools(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props => security.isValidToken === true ?\n      (<Component {...props} />) :\n      (<Redirect to='/login' />)}\n  />\n);\n\nSecureRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecureRoute);","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\n\n/**Componnts */\nimport SideNavbar from './component/SideNavbar';\nimport Schedule from './component/schedule/Schedule';\nimport AddSchedule from './component/schedule/AddSchedule';\nimport UpdateSchedule from './component/schedule/UpdateSchedule';\nimport Bus from './component/bus/Bus';\nimport AddBus from './component/bus/AddBus';\nimport UpdateBus from './component/bus/UpdateBus';\nimport BusRequisition from './component/bus/BusRequisition';\nimport CreateBusRequisition from './component/bus/CreateBusRequisition';\nimport BusRoute from './component/route/BusRoute';\nimport AddBusRoute from './component/route/AddBusRoute';\nimport UpdateBusRoute from './component/route/UpdateBusRoute';\nimport Stoppage from './component/stoppage/Stoppage';\nimport AddStoppage from './component/stoppage/AddStoppage';\nimport UpdateStoppage from './component/stoppage/UpdateStoppage';\nimport Driver from './component/driverAndStuff/Driver';\nimport Stuff from './component/driverAndStuff/Stuff';\nimport AddDriverOrStuff from './component/driverAndStuff/AddDriverOrStuff';\nimport Notice from './component/notice/Notice';\nimport AddAnnouncement from './component/notice/AddAnnouncement';\nimport Feedback from './component/feedback/Feedback';\nimport Login from './component/Login';\n\n/**Redux */\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nimport jwt_decode from 'jwt-decode';\nimport setJWTTokenToHeader from './security/setJWTTokenToHeader';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/SecurityActions';\nimport SecureRoute from './security/SecureRoute';\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTTokenToHeader(jwtToken);\n  const decodeJwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decodeJwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decodeJwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nconst MainDivStyle = {\n  border: \"1px solid gray\",\n  borderRadius: \"5px\",\n  height: \"1350px\"\n};\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div\n            className=\"App\"\n            style={{\n              paddingTop: \"10px\",\n              paddingLeft: \"20px\",\n              paddingRight: \"20px\",\n              paddingBottom: \"10px\"\n            }}\n          >\n            {\n              jwtToken && (\n                <Row>\n                  <Col md={6} style={{ padding: \"5px\", paddingLeft: \"15px\" }}>\n                    <img src=\"/diubnr.jpg\" height=\"40px\" alt=\"banar\" />\n                  </Col>\n                </Row>\n              )\n            }\n            <Row>\n              {\n                jwtToken &&\n                (<Col md={2}>\n                  <SideNavbar />\n                </Col>)\n              }\n              <Col\n                md={jwtToken ? 10 : 12}\n                style={\n                  jwtToken ? MainDivStyle : null\n                }\n              >\n                <div role=\"main\">\n                  {\n                    // public routes\n                  }\n                  <Route exact path=\"/\" component={Login} />\n                  <Route exact path=\"/login\" component={Login} />\n                  {\n                    // routes for schedule\n                  }\n                  <Switch>\n                    <SecureRoute exact path=\"/schedule\" component={Schedule} />\n                    <SecureRoute exact path=\"/schedule/add\" component={AddSchedule} />\n                    <SecureRoute exact path=\"/schedule/page/:pageNo\" component={Schedule} />\n                    <SecureRoute exact path=\"/schedule/edit/:scheduleId\" component={UpdateSchedule} />\n                    {\n                      // routes for bus\n                    }\n                    <SecureRoute exact path=\"/bus\" component={Bus} />\n                    <SecureRoute exact path=\"/bus/page/:pageNo\" component={Bus} />\n                    <SecureRoute exact path=\"/bus/add\" component={AddBus} />\n                    <SecureRoute exact path=\"/bus/edit/:busId\" component={UpdateBus} />\n                    <SecureRoute exact path=\"/bus/requisition\" component={BusRequisition} />\n                    <SecureRoute exact path=\"/bus/requisition/page/:pageNo\" component={BusRequisition} />\n                    <SecureRoute exact path=\"/bus/requisition/add\" component={CreateBusRequisition} />\n                    <SecureRoute exact path=\"/bus/requisition/edit/:requisitionId\" component={CreateBusRequisition} />\n                    {\n                      // routes for busRoute\n                    }\n                    <SecureRoute exact path=\"/route\" component={BusRoute} />\n                    <SecureRoute exact path=\"/route/page/:pageNo\" component={BusRoute} />\n                    <SecureRoute exact path=\"/route/add\" component={AddBusRoute} />\n                    <SecureRoute exact path=\"/route/edit/:routeId\" component={UpdateBusRoute} />\n                    {\n                      // routes for stoppage\n                    }\n                    <SecureRoute exact path=\"/stoppage\" component={Stoppage} />\n                    <SecureRoute exact path=\"/stoppage/page/:pageNo\" component={Stoppage} />\n                    <SecureRoute exact path=\"/stoppage/add\" component={AddStoppage} />\n                    <SecureRoute exact path=\"/stoppage/edit/:stoppageId\" component={UpdateStoppage} />\n                    {\n                      // routes for driver and stuff\n                    }\n                    <SecureRoute exact path=\"/driver\" component={Driver} />\n                    <SecureRoute exact path=\"/driver/page/:pageNo\" component={Driver} />\n                    <SecureRoute exact path=\"/stuff\" component={Stuff} />\n                    <SecureRoute exact path=\"/stuff/page/:pageNo\" component={Stuff} />\n                    <SecureRoute exact path=\"/driver/add\" component={AddDriverOrStuff} />\n                    <SecureRoute exact path=\"/stuff/add\" component={AddDriverOrStuff} />\n                    {\n                      // routes for feedback\n                    }\n                    <SecureRoute exact path=\"/feedback\" component={Feedback} />\n                    {\n                      // routess for notice\n                    }\n                    <SecureRoute exact path=\"/notice\" component={Notice} />\n                    <SecureRoute exact path=\"/notice/add\" component={AddAnnouncement} />\n                  </Switch>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}